From apers at mail.berlios.de  Fri May 14 06:49:33 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 06:49:33 +0200
Subject: [Spew-changes] r84 - trunk/src
Message-ID: <201005140449.o4E4nXBn010492@sheep.berlios.de>

Author: apers
Date: 2010-05-14 06:49:31 +0200 (Fri, 14 May 2010)
New Revision: 84

Modified:
   trunk/src/common.cpp
   trunk/src/common.h
Log:
Only use basename if one is not already defined.


Modified: trunk/src/common.cpp
===================================================================
--- trunk/src/common.cpp	2010-02-28 04:22:49 UTC (rev 83)
+++ trunk/src/common.cpp	2010-05-14 04:49:31 UTC (rev 84)
@@ -71,6 +71,7 @@
 static const size_t MAX_STR_CHARS = 1024;
 
 
+#if !HAVE_BASENAME
 /////////////////////////  basename()  ///////////////////////////////////////
 const char *basename(char *path)
 {
@@ -80,6 +81,7 @@
    else
       return name + 1;
 }
+#endif
 
 
 #ifdef HAVE_MOUNT_CHECK

Modified: trunk/src/common.h
===================================================================
--- trunk/src/common.h	2010-02-28 04:22:49 UTC (rev 83)
+++ trunk/src/common.h	2010-05-14 04:49:31 UTC (rev 84)
@@ -108,7 +108,9 @@
 //////////////////////////////////////////////////////////////////////////////
 ///////////////////////////  Functions  //////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////
+#if !HAVE_BASENAME
 const char *basename(char *path);
+#endif
 string strPrintf(const char *fmt, ...);
 string strSignal(int sig);
 string strError(int error_number);



From apers at mail.berlios.de  Fri May 14 06:51:13 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 06:51:13 +0200
Subject: [Spew-changes] r85 - trunk
Message-ID: <201005140451.o4E4pDBp016497@sheep.berlios.de>

Author: apers
Date: 2010-05-14 06:51:12 +0200 (Fri, 14 May 2010)
New Revision: 85

Modified:
   trunk/configure.ac
Log:
Only use basename if one already not available.


Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2010-05-14 04:49:31 UTC (rev 84)
+++ trunk/configure.ac	2010-05-14 04:51:12 UTC (rev 85)
@@ -83,7 +83,7 @@
 AC_FUNC_MALLOC
 AC_TYPE_SIGNAL
 AC_FUNC_VPRINTF
-AC_CHECK_FUNCS([getpagesize gettimeofday memset strerror strsignal strrchr localtime_r])
+AC_CHECK_FUNCS([getpagesize gettimeofday memset strerror strsignal strrchr localtime_r basename])
 
 # Add --enable-static
 AC_ARG_ENABLE(static-link,



From apers at mail.berlios.de  Fri May 14 07:17:16 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:17:16 +0200
Subject: [Spew-changes] r86 - trunk/src
Message-ID: <201005140517.o4E5HGTO026034@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:17:14 +0200 (Fri, 14 May 2010)
New Revision: 86

Modified:
   trunk/src/spew.cpp
Log:
Rest seed after every iteration so we don't get a repetitive read/write
pattern.


Modified: trunk/src/spew.cpp
===================================================================
--- trunk/src/spew.cpp	2010-05-14 04:51:12 UTC (rev 85)
+++ trunk/src/spew.cpp	2010-05-14 05:17:14 UTC (rev 86)
@@ -1360,6 +1360,8 @@
 void run(operation_enum operation)
 {
    int ret;
+   u32_t iterationSeed = gSeed;
+   Random rnd(gSeed);
 
    gCurrentIteration = 0;
    do
@@ -1379,7 +1381,7 @@
                                  gUserPattern,
                                  gFillMethod,
                                  gIOMethod,
-                                 gSeed,
+                                 iterationSeed,
                                  gJobId);
          if (job == (Job *)NULL)
          {
@@ -1418,7 +1420,7 @@
                                 gUserPattern,
                                 gFillMethod,
                                 gIOMethod,
-                                gSeed,
+                                iterationSeed,
                                 gJobId);
          if (job == (Job *)NULL)
          {
@@ -1439,6 +1441,7 @@
             gDisplay->nextJob();
          }
       }
+	  iterationSeed = rnd.getRandom32();
 
    } while (gIterationsToDo == 0LLU || gCurrentIteration < gIterationsToDo);
 }



From apers at mail.berlios.de  Fri May 14 07:23:37 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:23:37 +0200
Subject: [Spew-changes] r87 - in trunk: . man
Message-ID: <201005140523.o4E5NbUl012834@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:23:37 +0200 (Fri, 14 May 2010)
New Revision: 87

Modified:
   trunk/configure.ac
   trunk/man/spew.1.in
Log:
Bumped rev to 1.0.8


Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2010-05-14 05:17:14 UTC (rev 86)
+++ trunk/configure.ac	2010-05-14 05:23:37 UTC (rev 87)
@@ -9,7 +9,7 @@
 
 SPEW_AGE=1
 SPEW_REVISION=0
-SPEW_CURRENT=7
+SPEW_CURRENT=8
 AC_SUBST(SPEW_AGE)
 AC_SUBST(SPEW_REVISION)
 AC_SUBST(SPEW_CURRENT)

Modified: trunk/man/spew.1.in
===================================================================
--- trunk/man/spew.1.in	2010-05-14 05:17:14 UTC (rev 86)
+++ trunk/man/spew.1.in	2010-05-14 05:23:37 UTC (rev 87)
@@ -1,5 +1,5 @@
 .\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH SPEW "1" "May 2008" "spew 1.0.7" "User Commands"
+.TH SPEW "1" "May 2010" "spew 1.0.8" "User Commands"
 .SH NAME
 spew \- measures I/O performance and/or generates I/O load
 .SH SYNOPSIS



From apers at mail.berlios.de  Fri May 14 07:30:24 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:30:24 +0200
Subject: [Spew-changes] r88 - trunk
Message-ID: <201005140530.o4E5UOGg025134@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:30:22 +0200 (Fri, 14 May 2010)
New Revision: 88

Modified:
   trunk/builder.sh
Log:
Added linux-x86_64 to builder.sh architectures.


Modified: trunk/builder.sh
===================================================================
--- trunk/builder.sh	2010-05-14 05:23:37 UTC (rev 87)
+++ trunk/builder.sh	2010-05-14 05:30:22 UTC (rev 88)
@@ -8,6 +8,7 @@
 where <arch> is one of:
 
    linux-ia32
+   linux-x86_64
    linux-ia64
    linux-parisc64
    cygwinxp-ia32
@@ -35,6 +36,9 @@
     linux-ia32)
       libs="-ldl"
       ;;
+    linux-x86_64)
+      libs="-ldl"
+      ;;
     linux-ia64)
       libs="-ldl"
       ;;



From apers at mail.berlios.de  Fri May 14 07:40:54 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:40:54 +0200
Subject: [Spew-changes] r89 - web
Message-ID: <201005140540.o4E5es8E030683@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:40:53 +0200 (Fri, 14 May 2010)
New Revision: 89

Modified:
   web/index.html
Log:
Updated for 1.0.8 release.


Modified: web/index.html
===================================================================
--- web/index.html	2010-05-14 05:30:22 UTC (rev 88)
+++ web/index.html	2010-05-14 05:40:53 UTC (rev 89)
@@ -143,6 +143,13 @@
             <tbody>
 
               <tr>
+                <td style="vertical-align: top;">13-May-10</td>
+                <td style="vertical-align: top;">Spew 1.0.8 released.<br>
+		Minor bug and build fixes.<br>
+		</td>
+              </tr>
+
+              <tr>
                 <td style="vertical-align: top;">12-May-08</td>
                 <td style="vertical-align: top;">Spew 1.0.7 released.<br>
 		Minor bug fixes.<br>
@@ -220,6 +227,15 @@
             <tbody>
               <tr>
                 <td style="vertical-align: top;"><a href=
+                "ftp://ftp.berlios.de/pub/spew/1.0.8/index.html">spew-1.0.8</a><br>
+                </td>
+
+                <td style="vertical-align: top;">Minor bug fixes.<br>
+                <td style="vertical-align: top;">stable<br></td>
+              </tr>
+
+              <tr>
+                <td style="vertical-align: top;"><a href=
                 "ftp://ftp.berlios.de/pub/spew/1.0.7/index.html">spew-1.0.7</a><br>
                 </td>
 
@@ -323,7 +339,7 @@
               </tr>
               <tr>
                 <td style="vertical-align: top;"><a href=
-                "http://svn.berlios.de/viewcvs/spew/tags/1.0.7/">1.0.7</a><br>
+                "http://svn.berlios.de/viewcvs/spew/tags/1.0.8/">1.0.8</a><br>
                 </td>
                 </td>
 		  <td style="vertical-align: top;">Latest release</a><br>
@@ -331,6 +347,14 @@
               </tr>
               <tr>
                 <td style="vertical-align: top;"><a href=
+                "http://svn.berlios.de/viewcvs/spew/tags/1.0.7/">1.0.7</a><br>
+                </td>
+                </td>
+		  <td style="vertical-align: top;">Obsolete</a><br>
+                </td>
+              </tr>
+              <tr>
+                <td style="vertical-align: top;"><a href=
                 "http://svn.berlios.de/viewcvs/spew/tags/1.0.6/">1.0.6</a><br>
                 </td>
                 </td>



From apers at mail.berlios.de  Fri May 14 07:42:41 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:42:41 +0200
Subject: [Spew-changes] r90 - branches/threaded/src tags tags/1.0.8
	tags/1.0.8/man tags/1.0.8/src
Message-ID: <201005140542.o4E5gf2D031388@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:42:39 +0200 (Fri, 14 May 2010)
New Revision: 90

Added:
   tags/1.0.8/
   tags/1.0.8/builder.sh
   tags/1.0.8/configure.ac
   tags/1.0.8/man/spew.1.in
   tags/1.0.8/src/common.cpp
   tags/1.0.8/src/common.h
   tags/1.0.8/src/spew.cpp
Removed:
   tags/1.0.8/builder.sh
   tags/1.0.8/configure.ac
   tags/1.0.8/man/spew.1.in
   tags/1.0.8/src/common.cpp
   tags/1.0.8/src/common.h
   tags/1.0.8/src/spew.cpp
Modified:
   branches/threaded/src/Log.cpp
   branches/threaded/src/Log.h
Log:
Tagging the 1.0.8 release of the spew project.


Modified: branches/threaded/src/Log.cpp
===================================================================
--- branches/threaded/src/Log.cpp	2010-05-14 05:40:53 UTC (rev 89)
+++ branches/threaded/src/Log.cpp	2010-05-14 05:42:39 UTC (rev 90)
@@ -31,7 +31,10 @@
 #include <stdarg.h>
 #include <errno.h>
 #include <signal.h>
+
+#ifdef USE_THREADS
 #include <pthread.h>
+#endif
 
 #include "common.h"
 #include "Log.h"
@@ -47,68 +50,69 @@
 //////////////////////////  Log::threadEntryPoint()  //////////////////////////
 void *Log::doWork(void *pthis)
 {
+   Log& log = *((Log *)pthis);
+
    sigset_t sigsToBlock;
    sigfillset(&sigsToBlock);
    pthread_sigmask(SIG_BLOCK, &sigsToBlock, NULL);
 
-   const Log *log = (Log *)pthis;
    unsigned int queueLen;
    for (;;)
    {
-      pthread_mutex_lock(&log->mMsgQueueMutex);
-      if (!log->mShutdown)
-         pthread_cond_wait(&log->mMsgQueueNotEmpty, &log->mMsgQueueMutex);
+      pthread_mutex_lock(&log.mMsgQueueMutex);
+      if (!log.mShutdown)
+         pthread_cond_wait(&log.mMsgQueueNotEmpty, &log.mMsgQueueMutex);
 
       // Flush DisplayStdout
-      queueLen = log->mDisplayStdoutQueue.size();
+      queueLen = log.mDisplayStdoutQueue.size();
       for (unsigned int i = 0; i < queueLen; i++)
       {
-         fprintf(log->mDisplayStdoutFile, 
+         fprintf(log.mDisplayStdoutFile, 
                  "%s", 
-                 log->mDisplayStdoutQueue.front().c_str());
-         log->mDisplayStdoutQueue.pop_front();
+                 log.mDisplayStdoutQueue.front().c_str());
+         log.mDisplayStdoutQueue.pop_front();
       }
       if (queueLen > 0)
-         fflush(log->mDisplayStdoutFile);
+         fflush(log.mDisplayStdoutFile);
 
       // Flush DisplayStderr
-      queueLen = log->mDisplayStderrQueue.size();
+      queueLen = log.mDisplayStderrQueue.size();
       for (unsigned int i = 0; i < queueLen; i++)
       {
-         fprintf(log->mDisplayStderrFile, 
+         fprintf(log.mDisplayStderrFile, 
                  "%s", 
-                 log->mDisplayStderrQueue.front().c_str());
-         log->mDisplayStderrQueue.pop_front();
+                 log.mDisplayStderrQueue.front().c_str());
+         log.mDisplayStderrQueue.pop_front();
       }
       if (queueLen > 0)
-         fflush(log->mDisplayStderrFile);
+         fflush(log.mDisplayStderrFile);
 
       // Flush LogStdout
-      queueLen = log->mLogStdoutQueue.size();
+      queueLen = log.mLogStdoutQueue.size();
       for (unsigned int i = 0; i < queueLen; i++)
       {
-         fprintf(log->mLogStdoutFile,
+         fprintf(log.mLogStdoutFile,
                  "%s", 
-                 log->mLogStdoutQueue.front().c_str());
-         log->mLogStdoutQueue.pop_front();
+                 log.mLogStdoutQueue.front().c_str());
+         log.mLogStdoutQueue.pop_front();
       }
       if (queueLen > 0)
-         fflush(log->mLogStdoutFile);
+         fflush(log.mLogStdoutFile);
 
       // Flush LogStderr
-      queueLen = log->mLogStderrQueue.size();
+      queueLen = log.mLogStderrQueue.size();
       for (unsigned int i = 0; i < queueLen; i++)
       {
-         fprintf(log->mLogStderrFile, 
+         fprintf(log.mLogStderrFile, 
                  "%s", 
-                 log->mLogStderrQueue.front().c_str());
-         log->mLogStderrQueue.pop_front();
+                 log.mLogStderrQueue.front().c_str());
+         log.mLogStderrQueue.pop_front();
       }
       if (queueLen > 0)
-         fflush(log->mLogStderrFile);
+         fflush(log.mLogStderrFile);
 
-      pthread_mutex_unlock(&log->mMsgQueueMutex);
-      if (log->mShutdown)
+      pthread_mutex_unlock(&log.mMsgQueueMutex);
+      if (log.mShutdown)
          pthread_exit(NULL);
    }
 }
@@ -120,7 +124,7 @@
    mShutdown = false;
    pthread_mutex_init(&mMsgQueueMutex, NULL);
    pthread_cond_init(&mMsgQueueNotEmpty, NULL);
-   mThread = (pthread_t *)malloc(sizeof(pthread_t));
+   mThread = new pthread_t;
    if (!mThread)
       return ENOMEM;
    if (pthread_create(mThread, NULL, Log::doWork, this) != 0)
@@ -138,14 +142,15 @@
    mShutdown = true;
    pthread_cond_signal(&mMsgQueueNotEmpty);
    pthread_mutex_unlock(&mMsgQueueMutex);
-   if ((ret = pthread_join(*mThread, (void **)NULL)) != 0)
+	ret = pthread_join(*mThread, (void **)NULL);
+   if (!ret)
        return ret;
    pthread_mutex_destroy(&mMsgQueueMutex);
    pthread_cond_destroy(&mMsgQueueNotEmpty);
    if (mThread)
    {
-      free(mThread);
-      mThread = (pthread_t *)NULL;
+      delete mThread;
+      mThread = 0;
    }
    return EXIT_OK;
 }
@@ -177,7 +182,7 @@
    mLogStderrFile = (FILE *)NULL;
 
 #ifdef USE_THREADS
-   mThread = (pthread_t *)NULL;
+   mThread = 0;
    mShutdown = false;
 #endif
 }
@@ -186,7 +191,6 @@
 //////////////////////////  Log::open()  //////////////////////////////////////
 int Log::open()
 {
-   int rtn;
    FILE *logStdoutFile;
    if (mLogfilePath.size() > 0)
    {
@@ -198,7 +202,8 @@
    }
 
 #ifdef USE_THREADS
-   if ((rtn = this->startThread()) != 0)
+	int rtn = this->startThread();
+   if (rtn)
       return rtn;
 #endif
    return EXIT_OK;
@@ -213,13 +218,9 @@
    rtn = this->stopThread();
 #endif
    if (mLogStdoutFile)
-   {
       fclose(mLogStdoutFile);
-   }
-   if (mLogStderrFile && mLogStderrFile != mLogStdoutFile)
-   {
+   if (mLogStderrFile && (mLogStderrFile != mLogStdoutFile))
       fclose(mLogStderrFile);
-   }
 
    return rtn;
 }
@@ -229,20 +230,24 @@
 void Log::note(unsigned int outputDevice, const char *fmt, ...) const
 {
    va_list ap;
-   char *s;
    int len;
 
+	// Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
 
    this->submitWork(outputDevice, s);
-   free(s);
+   delete s;
 }
 
 
@@ -250,15 +255,19 @@
 void Log::error(unsigned int outputDevice, const char *fmt, ...) const
 {
    va_list ap;
-   char *s;
    int len;
    string str;
 
+	// Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
@@ -266,8 +275,8 @@
    str = "error: ";
    str += s;
 
-   this->submitWork(outputDevice, str.c_str());
-   free(s);
+   this->submitWork(outputDevice, str);
+   delete s;
 }
 
 
@@ -275,20 +284,24 @@
 void Log::showNote(const char *fmt, ...) const
 {
    va_list ap;
-   char *s;
    int len;
 
+	// Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
 
    this->submitWork(OUTPUT_DISPLAY_STDOUT, s);
-   free(s);
+   delete s;
 }
 
 
@@ -296,15 +309,19 @@
 void Log::showError(const char *fmt, ...) const
 {
    va_list ap;
-   char *s;
    int len;
    string str;
 
+   // Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+   
+	char *s =  new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.	
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
@@ -312,8 +329,8 @@
    str = "error: ";
    str += s;
 
-   this->submitWork(OUTPUT_DISPLAY_STDERR, str.c_str());
-   free(s);
+   this->submitWork(OUTPUT_DISPLAY_STDERR, str);
+   delete s;
 }
 
 
@@ -324,26 +341,27 @@
       return;
 
    va_list ap;
-   char *s;
    int len;
-   string str;
 
+   // Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
 
    // Put timestamp followed by message in the log.
-   char timestamp[TIMESTAMP_STR_LEN + 1];
-   str = this->timestamp(timestamp);
-   str += s;
+   string str = this->timestamp() + s;
 
-   this->submitWork(OUTPUT_LOG_STDOUT, str.c_str());
-   free(s);
+   this->submitWork(OUTPUT_LOG_STDOUT, str);
+   delete s;
 }
 
 
@@ -355,20 +373,24 @@
       return;
 
    va_list ap;
-   char *s;
    int len;
 
+   // Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
 
    this->submitWork(OUTPUT_LOG_STDOUT, s);
-   free(s);
+   delete s;
 }
 
 
@@ -379,21 +401,26 @@
       return;
 
    va_list ap;
-   char *s;
    int len;
    string str;
 
+
+   // Find out how long it is.
    va_start(ap, fmt);
    len = vsnprintf((char *)NULL, 0, fmt, ap);
    va_end(ap);
-   if ((s = (char *)malloc(len + 1)) == NULL)
+
+	char *s = new char[len + 1];
+	if (!s)
       return;
+
+	// Fill the string.
    va_start(ap, fmt);
    vsnprintf(s, len + 1, fmt, ap);
    va_end(ap);
 
    this->submitWork(OUTPUT_LOG_STDERR, s);
-   free(s);
+   delete s;
 }
 
 
@@ -405,15 +432,12 @@
 
    string str;
 
-   char timestamp[TIMESTAMP_STR_LEN + 1];
-   this->timestamp(timestamp);
-
    str = string(LOGFILE_WIDTH, LOGFILE_SEPARATOR_CHAR);
    str += "\n";
-   str += this->logSeparatorNote(timestamp, "START");
+   str += this->logSeparatorNote(this->timestamp().c_str(), "START");
    str += "\n";
 
-   this->submitWork(OUTPUT_LOG_STDOUT, str.c_str());
+   this->submitWork(OUTPUT_LOG_STDOUT, str);
 }
 
 
@@ -425,15 +449,12 @@
 
    string str;
 
-   char timestamp[TIMESTAMP_STR_LEN + 1];
-   this->timestamp(timestamp);
-
    str = "\n";
-   str += this->logSeparatorNote(timestamp, "FINISH");
+   str += this->logSeparatorNote(this->timestamp().c_str(), "FINISH");
    str += string(LOGFILE_WIDTH, LOGFILE_SEPARATOR_CHAR);
    str += "\n\n";
 
-   this->submitWork(OUTPUT_LOG_STDOUT, str.c_str());
+   this->submitWork(OUTPUT_LOG_STDOUT, str);
 }
 
 
@@ -449,7 +470,7 @@
    string str = args;
    this->justify(str, leader, indent, follower);
 
-   this->submitWork(OUTPUT_LOG_STDOUT, str.c_str());
+   this->submitWork(OUTPUT_LOG_STDOUT, str);
 }
 
 
@@ -474,19 +495,21 @@
 
 
 //////////////////////////  Log::timestamp()  ////////////////////////////////
-char *Log::timestamp(char *timestamp) const
+string Log::timestamp() const
 {
    time_t currentTime;
    struct tm currentBrokenDownTime;
    
    time(&currentTime);
    localTime(&currentTime, &currentBrokenDownTime);
+
+	char timestamp[TIMESTAMP_STR_LEN + 1];
    strftime(timestamp, 
-            TIMESTAMP_STR_LEN + 1,
+            sizeof(timestamp),
             "%Y/%m/%d %T", 
             &currentBrokenDownTime);
 
-   return timestamp;
+   return string(timestamp);
 }
 
 
@@ -547,29 +570,24 @@
 
 
 //////////////////////////  Log::submitWork()  ////////////////////////////////
-void Log::submitWork(unsigned int outputDevice, const char *msg) const
+void Log::submitWork(unsigned int outputDevice, const string& msg) const
 {
-   if (!outputDevice || strlen(msg) == 0)
+   if (!outputDevice || msg.empty())
       return;
 
 #ifdef USE_THREADS
+	if (mShutdown)
+		return;
    pthread_mutex_lock(&mMsgQueueMutex);
    if (outputDevice & OUTPUT_DISPLAY_STDOUT)
-   {
       mDisplayStdoutQueue.push_back(string(msg));
-   }
    if (outputDevice & OUTPUT_DISPLAY_STDERR)
-   {
       mDisplayStderrQueue.push_back(string(msg));
-   }
    if ((outputDevice & OUTPUT_LOG_STDOUT) && mLogStdoutFile)
-   {
       mLogStdoutQueue.push_back(string(msg));
-   }
    if ((outputDevice & OUTPUT_LOG_STDERR) && mLogStderrFile)
-   {
       mLogStderrQueue.push_back(string(msg));
-   }
+
    pthread_cond_signal(&mMsgQueueNotEmpty);
    pthread_mutex_unlock(&mMsgQueueMutex);
 #else
@@ -600,9 +618,7 @@
 //////////////////////////  Log::~Log()  //////////////////////////////////////
 Log::~Log()
 {
-
 #ifdef USE_THREADS
-   if (mThread)
-      free(mThread);
+      delete mThread;
 #endif
 }

Modified: branches/threaded/src/Log.h
===================================================================
--- branches/threaded/src/Log.h	2010-05-14 05:40:53 UTC (rev 89)
+++ branches/threaded/src/Log.h	2010-05-14 05:42:39 UTC (rev 90)
@@ -31,9 +31,10 @@
 {
 #ifdef USE_THREADS
 protected:
-   static void *doWork(void *pthis);
    int startThread();
    int stopThread();
+private:
+   static void *doWork(void *pthis);
 #endif // USE_THREADS
 
 public:
@@ -72,8 +73,8 @@
                    const string& leader = "", 
                    const string &hangingIndent = "",
                    const string &follower = "") const;
-   char *timestamp(char *timestamp) const;
-   void submitWork(unsigned int outputDevices, const char *msg) const;
+   string timestamp() const;
+   void submitWork(unsigned int outputDevices, const string& str) const;
 
 private:
    Log(const Log&); // Hide copy constructor.

Copied: tags/1.0.8 (from rev 80, trunk)

Deleted: tags/1.0.8/builder.sh
===================================================================
--- trunk/builder.sh	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/builder.sh	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,92 +0,0 @@
-#!/bin/sh
-
-if [ $# -lt 1 ]
-then
-cat >&2 <<EOF
-Usage: `basename $0` <arch>
-
-where <arch> is one of:
-
-   linux-ia32
-   linux-ia64
-   linux-parisc64
-   cygwinxp-ia32
-   hpux11-parisc64
-   hpux11-ia64
-
-EOF
-    exit 1
-fi
-
-arch=$1
-cxxflags=""
-ldflags=""
-configopts=--enable-static-link
-cxx=g++
-cc=gcc
-MAKE=make
-TAR=tar
-TAR_FLAGS=-cf
-TAR_EXT=tgz
-COMPRESS=gzip
-COMPRESS_FLAGS=-c
-
-case $arch in
-    linux-ia32)
-      libs="-ldl"
-      ;;
-    linux-ia64)
-      libs="-ldl"
-      ;;
-    linux-parisc64)
-      libs="-ldl"
-      ;;
-    cygwinxp-ia32)
-      TAR=zip
-      TAR_FLAGS=-r 
-      TAR_EXT=zip
-      ;;
-     hpux11-ia64)
-     cxx=g++
-     cc=gcc
-     MAKE=gmake
-     TAR=/usr/bin/tar
-     COMPRESS=/usr/local/bin/gzip
-     COMPRESS_FLAGS=-c
-     ldflags="-L /usr/local/lib/hpux32"
-     libs="-lncurses -lpopt -lintl -liconv"
-     cxxflags="-I/usr/local/include -I/usr/local/include/ncurses"
-     ;;
-    *)
-      echo "error: unknown architecture -- use one of linux-ia32, linux-ia64, linux-parisc64, cygwinxp-ia32, or hpux11-ia64" >&2
-      exit 1
-      ;;
-esac
-
-# Get version
-program_name=`sed -n -e 's/AM_INIT_AUTOMAKE(\(.*\),.*$/\1/p' configure.ac`
-age=`sed -n -e 's/.*SPEW_AGE=\([^:space:].*$\)/\1/p' configure.ac`
-revision=`sed -n -e 's/.*SPEW_REVISION=\([^:space:].*$\)/\1/p' configure.ac`
-current=`sed -n -e 's/.*SPEW_CURRENT=\([^:space:].*$\)/\1/p' configure.ac`
-
-distname="${program_name}-${age}.${revision}.${current}.${arch}"
-topdir=`pwd`
-builddir=${topdir}/${distname}
-installdir=${builddir}/usr/local
-tarfile=${distname}.tgz
-
-rm -f ${tarfile}
-rm -rf ${builddir}
-mkdir -p ${installdir}
-if [ -f  Makefile ]
-then
-  ${MAKE} distclean
-fi
-LIBS="$libs" CC=${cc} CXX=${cxx} CXXFLAGS="$cxxflags" LD=${ld} LDFLAGS="$ldflags" ./configure $configopts
-${MAKE} clean all
-${MAKE} install prefix=${installdir}
-
-( cd ${builddir} && ${TAR} ${TAR_FLAGS} - . | ${COMPRESS} ${COMPRESS_FLAGS} > ${topdir}/${distname}.${TAR_EXT} )
-
-rm -rf ${builddir}
-

Copied: tags/1.0.8/builder.sh (from rev 88, trunk/builder.sh)

Deleted: tags/1.0.8/configure.ac
===================================================================
--- trunk/configure.ac	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/configure.ac	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,111 +0,0 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
-AC_PREREQ(2.57)
-AC_INIT(src/spew.cpp)
-AC_CONFIG_AUX_DIR(config)
-AM_CONFIG_HEADER(config.h)
-AM_MAINTAINER_MODE
-
-SPEW_AGE=1
-SPEW_REVISION=0
-SPEW_CURRENT=7
-AC_SUBST(SPEW_AGE)
-AC_SUBST(SPEW_REVISION)
-AC_SUBST(SPEW_CURRENT)
-VERSION=$SPEW_AGE.$SPEW_REVISION.$SPEW_CURRENT
-
-AM_INIT_AUTOMAKE(spew, $VERSION)
-
-# Checks for programs.
-AC_PROG_CXX
-AC_PROG_CC
-AC_PROG_INSTALL
-AC_PROG_MAKE_SET
-AC_PROG_RANLIB
-AC_PROG_LN_S
-
-# Checks for libraries.
-AC_CHECK_LIB(popt, poptGetContext, ,AC_MSG_ERROR([PACKAGE] requires popt))
-AC_CHECK_LIB(ncurses, wresize, ,AC_MSG_ERROR([PACKAGE] requires ncurses))
-
-# Checks for header files.
-AC_HEADER_STDC
-AC_CHECK_HEADERS([fcntl.h stdint.h stdlib.h sys/time.h unistd.h paths.h])
-
-# Common defines
-AC_DEFINE(_GNU_SOURCE, 1, GNU extensions.)
-AC_DEFINE(_REENTRANT, 1, Use reentrant code if available.)
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_HEADER_STDBOOL
-AC_C_CONST
-AC_TYPE_OFF_T
-AC_TYPE_SIZE_T
-AC_HEADER_TIME
-AC_CHECK_DECL(O_DIRECT,AC_DEFINE(HAVE_DIRECT_IO,[1],Define to 1 if direct I/O is available.),,[#include <fcntl.h>])
-AC_CHECK_DECL(TIOCGWINSZ,AC_DEFINE(HAVE_WINSIZE_IOCTL,[1],Define to 1 if there is an ioctl to get the window size.),,[#include <sys/ioctl.h>])
-AC_CHECK_DECL(WIOCGETD,AC_DEFINE(HAVE_WINSIZE_IOCTL,[1],Define to 1 if there is an ioctl to get the window size.),,[#include <sys/ioctl.h>])
-AC_SYS_LARGEFILE
-
-# Functionality checks.
-AC_CHECK_DECL(MNT_MNTTAB,AC_DEFINE(MNTTAB_PATH,MNT_MNTTAB,Path to mtab/mnttab),,[#include <mntent.h>])
-AC_CHECK_DECL(_PATH_MOUNTED,AC_DEFINE(MNTTAB_PATH,_PATH_MOUNTED,Path to mnttab),,[#include <paths.h>])
-AC_CHECK_DECL(MNTTAB_PATH,mnttab=yes,mnttab=no,)
-if test "$mnttab" = yes; then
-AC_CHECK_FUNC([getmntent],AC_DEFINE(HAVE_MOUNT_CHECK,[1],Define to 1 if getmntent can be used to get mounted file systems.),,)
-fi
-
-# Get typedefs for 32 and 64 bit unsigned integers.
-AC_CHECK_SIZEOF(unsigned int)
-AC_CHECK_SIZEOF(unsigned long)
-AC_CHECK_SIZEOF(unsigned long long)
-if test "$ac_cv_sizeof_unsigned_int" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned int], Unsigned 4-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned long], Unsigned 4-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long_long" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned long long], Unsigned 4-byte integer)
-else
-  AC_MSG_ERROR([compiler has no 4-byte unsigned integer])
-fi
-if test "$ac_cv_sizeof_unsigned_int" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned int], Unsigned 8-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned long], Unsigned 8-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long_long" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned long long], Unsigned 8-byte integer)
-else
-  AC_MSG_ERROR([compiler has no 8-byte unsigned integer])
-fi
-
-# Checks for library functions.
-AC_FUNC_MALLOC
-AC_TYPE_SIGNAL
-AC_FUNC_VPRINTF
-AC_CHECK_FUNCS([getpagesize gettimeofday memset strerror strsignal strrchr localtime_r])
-
-# Add --enable-static
-AC_ARG_ENABLE(static-link,
-	[  --enable-static-link         link spew statically],
-	[ case "$enableval" in
-          yes) static_spew=yes ;;
-          no) static_spew=no;;
-          esac
-        ],
-	static_spew=no)
-
-STATIC_LINK=""
-if test "x$static_spew" = "xyes" ; then
-  if test "x`uname`" = "xHP-UX" ; then
-    STATIC_LINK="-Wl,-a,archive_shared"
-  else
-    STATIC_LINK="-static"
-  fi
-fi
-AC_SUBST(STATIC_LINK)
-
-CXXFLAGS="$CXXFLAGS -DSYSCONFDIR=${sysconfdir}"
-
-AC_CONFIG_FILES([src/Makefile man/Makefile etc/Makefile])
-AC_OUTPUT(Makefile)

Copied: tags/1.0.8/configure.ac (from rev 87, trunk/configure.ac)

Deleted: tags/1.0.8/man/spew.1.in
===================================================================
--- trunk/man/spew.1.in	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/man/spew.1.in	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,320 +0,0 @@
-.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH SPEW "1" "May 2008" "spew 1.0.7" "User Commands"
-.SH NAME
-spew \- measures I/O performance and/or generates I/O load
-.SH SYNOPSIS
-.B spew
-\fI--write|--read|--read-after-write \fR[\fIOPTION\fR]... \fITRANSFER_SIZE\fR[\fIkKmMgG\fR] \fIFILE\fR
-.SH DESCRIPTION
-An I/O performance measurement and load generation tool. Writes and/or
-reads generated data to or from a character device, block device, or
-regular file.
-.TP
-\fB\-B\fR, \fB\-\-max\-buffer\-size\fR=\fIBUFFER_SIZE\fR
-Each read(2)/write(2) call uses a
-maximum buffer of size BUFFER_SIZE.
-.TP
-\fB\-b\fR, \fB\-\-min\-buffer\-size\fR=\fIBUFFER_SIZE\fR
-Each read(2)/write(2) call uses a
-minimum buffer of size BUFFER_SIZE.
-.TP
-\fB\-c\fR, \fB\-\-continue\-after\-error\fR
-Continue after data integrity errors.
-.TP
-\fB\-d\fR, \fB\-\-direct\fR
-Use direct I/O. Should only be used on
-block device files. Not all operating
-systems support direct I/O
-.TP
-\fB\-g\fR, \fB\-\-generate\-load\fR
-Equivalent to: \fB\-v\fR \fB\-t\fR \fB\-P\fR \fB\-p\fR random \fB\-i\fR 0.
-.TP
-\fB\-i\fR, \fB\-\-iterations\fR=\fICOUNT\fR
-Write/read data COUNT times. If count
-is 0, repeats forever.
-.TP
-\fB\-l\fR, \fB\-\-logfile\fR=\fILOGFILE\fR
-Send log messages to LOGFILE.
-.TP
-\fB\-\-no\-progress\fR
-Don't show progress (default).
-.TP
-\fB\-\-no\-rcfiles\fR
-Don't use standard rcfiles.
-.TP
-\fB\-q\fR, \fB\-\-no\-statistics\fR
-Don't output statistics.
-.TP
-\fB\-\-no\-tui\fR
-Don't use TUI interface.
-.TP
-\fB\-o\fR, \fB\-\-offset\fR=\fIOFFSET\fR
-Seek to OFFSET before starting I/O.
-.TP
-\fB\-P\fR, \fB\-\-progress\fR
-Show progress.
-.TP
-\fB\-p\fR, \fB\-\-pattern\fR=\fIPATTERN\fR
-Use data pattern PATTERN when reading
-or writing data.
-.TP
-\fB\-r\fR, \fB\-\-random\fR
-Read/Write buffers to random offsets.
-.TP
-\fB\-\-raw\fR
-An alias for \fB\-\-read\-after\-write\fR.
-.TP
-\fB\-\-rcfile\fR=\fIRCFILE\fR
-Read command\-line options from RCFILE.
-.TP
-\fB\-\-read\fR
-Read date from FILE.
-.TP
-\fB\-\-read\-after\-write\fR
-Read back data after writing to FILE.
-.TP
-\fB\-S\fR, \fB\-\-seed\fR=\fISEED\fR
-Use SEED for random number seed.
-.TP
-\fB\-s\fR, \fB\-\-sync\fR
-Use synchronous I/O.
-.TP
-\fB\-\-statistics\fR
-Output statistics (default).
-.TP
-\fB\-t\fR, \fB\-\-tui\fR
-Use curses\-based, terminal user
-interface.
-.TP
-\fB\-u\fR, \fB\-\-units\fR=\fIUNITS\fR
-Show transfer rate in UNITS units.
-.TP
-\fB\-\-usage\fR
-Show brief usage message and exit.
-.TP
-\fB\-V\fR, \fB\-\-version\fR
-Output version information and exit.
-.TP
-\fB\-v\fR, \fB\-\-detailed\-statistics\fR
-Output detailed statistics.
-.TP
-\fB\-\-write\fR
-Write data to FILE.
-.TP
-\-?, \fB\-\-help\fR
-Show this help and exit.
-.TP
-FILE
-Regular or device file to write data to.
-.TP
-LOGFILE
-Path to a file used for logging.
-.TP
-MAX_BUFFER_SIZE
-Minimum buffer size used in each
-read(2)/write(2) call (default is
-MIN_BUFFER_SIZE bytes).
-MAX_BUFFER_SIZE. Must be an even
-multiple of 512 bytes and can be
-specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-MAX_BUFFER_SIZE defaults to
-MIN_BUFFER_SIZE.  If MAX_BUFFER_SIZE >
-MIN_BUFFER_SIZE, random buffers sizes
-between the two limits are used.
-MAX_BUFFER_SIZE must be an even
-multiple of MIN_BUFFER_SIZE.
-.TP
-MIN_BUFFER_SIZE
-Minimum buffer size used in each
-read(2)/write(2) call (default is
-512 bytes).
-MIN_BUFFER_SIZE. Must be an even
-multiple of 512 bytes and can be
-specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.TP
-OFFSET
-Position to seek to in the file before
-starting I/O (default is 0). OFFSET
-must be an even multiple of 512 bytes
-and can be specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.TP
-PATTERN
-Data pattern used when writing/reading
-data. Available patterns are: none,
-zeros, ones, alt, random, numbers, and "#"
-(where "#" is a number between 0\-255). The
-default pattern is "none".
-.TP
-RCFILE
-Read additional command\-line options
-from RCFILE.  Other options on the
-command\-line will override options in
-RCFILE.
-.TP
-SEED
-Used to seed the random number generator
-Must be >= 1 and <= 2^32.
-.TP
-TRANSFER_SIZE
-Total number of bytes to transfer (must
-be an even multiple of both
-MIN_BUFFER_SIZE and MAX_BUFFER)SIZE).
-TRANSFER_SIZE can be specified in
-bytes, kilobytes, megabytes, or
-gigabytes.
-.TP
-UNITS
-Kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.SH EXAMPLES
-\fBspew --write -b 16k 1m /tmp/bigfile\fR
-.PP
-or
-.PP
-\fBspew -b 16k 1m /tmp/bigfile\fR
-.PP
-Writes 1 mebibyte (1 mebibyte = 1024*1024 bytes) using 16 kibibytes (1
-kibibyte = 1024 bytes) requests to the file \fI/tmp/bigfile\fR using
-the default pattern (random).
-.
-Displays the write transfer rate in kibibytes per second and the write
-transfer time in seconds.
-.
-.PP
-\fBspew --write -u m -i 10 -b 1k 256k /dev/sda1\fR
-.PP
-or
-.PP
-\fBspew -u m -i 10 -b 1k 256k /dev/sda1\fR
-.PP
-Writes 256 kibibytes using 1 kibibyte requests to the block device file
-\fI/dev/sda1\fR 10 times using the default pattern (random).
-.
-The iteration and cumulative write transfer rates are displayed in
-mebibytes per second and the iteration and cumulative write transfer times are
-displayed in seconds.
-.PP
-\fBspew --raw -d -o 1m -b 16m 1g /tmp/bigfile\fR
-.PP
-or
-.PP
-\fBregorge -s -o 1m -b 16m 1g /tmp/bigfile\fR
-.PP
-Write 1 gibibyte (1 gibibyte = 1024*1024*1024 bytes) starting at an
-offset of 1 mebibyte using 16 mebibyte requests to the file
-\fI/tmp/bigfile\fR using the default pattern (random).
-. 
-The data is written synchronously and flushed at file close.
-.
-Then read in the same data using the same request size and offset.
-.
-The data is checked to ensure that the data read in matches the data
-read out.
-.
-Write and read tranfer rates are displayed in kibibytes/second.  Read
-are write transfer times are displayed in seconds.
-.PP
-\fBspew --read -i 0 -u M -p zeros -b 512 1m /dev/zero\fR
-.PP
-or
-.PP
-\fBgorge -i 0 -u M -p zeros -b 512 1m /dev/zero\fR
-.PP
-Read 1 mebibyte of data using 512 byte requests from the file
-\fI/dev/zero\fR an infinite number of times using the zeros pattern
-(don't check the data).
-.
-The iteration and cumulative read transfer rates are displayed in
-megabytes (1 megabyte = 1,000,000 bytes) per second and the iteration
-and cumulative read transfer times are displayed in seconds.
-.PP
-\fBspew --raw -g -r -b 1k -B 256K 1t /dev/md1\fR
-.PP
-or
-.PP
-\fBregorge -g -r -b 1k -B 256K 1t /dev/md1\fR
-.PP
-Write 1 tebibyte (1 tebibyte = 1024*1024*1024*1024 bytes) using 1-256
-kibibyte requests to the block device \fI/dev/md1\fR using the random
-pattern.  Random seeks are performed before each transfer, but each
-block between the start and end of the data is written exactly once.
-.
-The request sizes are chosen randomly.
-. 
-Then read in the same data using the same request sizes and seeks in
-the same sequence.
-.
-Repeat the above sequence an infinite number of times until told to
-quit (via signal or TUI command).
-.PP
-The data is checked to ensure that the data read in matches the data
-read out.
-.
-A curses-based TUI is used to display iteration and cumulative transfer
-rates, transfer times, and bytes transferred.
-.
-Display verbose statistics after quitting.
-.
-.SH ALGORITHMS
-.
-The following algorithm is used to determine blocksize when
-MAX_BUFFER_SIZE > MIN_BUFFER_SIZE:
-.PP
-Find the largest blocksize that is a power of 2 and is >=
-MAX_BUFFER_SIZE.
-.
-Call this maxbuffersize. Find the smallest buffersize that is a power
-of 2 and is >= MIN_BUFFER_SIZE. Call this minbuffersize.
-.
-Chunksize = maxbuffersize * (difference in number of bits between min
-and maxbuffersize + 1).
-.
-The number of chunks is TRANSFER_SIZE/chunksize. Call this numchunks.
-.
-There will be numchunks number of read/writes that are of size
-maxbuffersize, 2 * numchunks number of read/writes that are of size
-maxbuffersize/2, 4 * numchunks number of read/writes that are of size
-maxbuffersize/4, and so on until minbuffersize is reached.
-.
-MIN_BUFFER_SIZE is used for any remaining transfers if TRANSFER_SIZE
-is not evenly divisible by chunksize.
-.PP
-Example: Using a MIN_BLOCK_SIZE of 1k, a MAX_BLOCK_SIZE of 8k and a
-TRANSFER_SIZE of 264k results in 8 8k read/writes, 16 4k read/write,
-32 2k read/writes, and 64 + 8 1k read/writes.
-.SH PATTERNS
-.
-Use the following od(1) command to examine spew generated files where a data
-integrity problem has occurred:
-.PP
-od -A d --format=d8 --width=32  <file>
-.PP
-.SH FILES
-.TP
-\fl$HOME/.spewrc\fR or \fl$SPEWRC\fR
-Holds user default options. These options precede any options included
-on the command-line.
-.TP
-\flSYSCONFDIR/spew.conf\fR
-Holds system-wide default options.  These options precede any options
-included on the command-line  and options included from \fl$HOME/.spewrc\fR or \fl$SPEWRC\fR.
-.SH AUTHOR
-Written by Andrew Patterson <andrew.patterson at hp.com>
-.SH "REPORTING BUGS"
-Report bugs to Andrew Patterson <andrew.patterson at hp.com>.
-.PP
-Copyright 2007 Hewlett\-Packard Corp.

Copied: tags/1.0.8/man/spew.1.in (from rev 87, trunk/man/spew.1.in)

Deleted: tags/1.0.8/src/common.cpp
===================================================================
--- trunk/src/common.cpp	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/common.cpp	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,191 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// common.cpp
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-namespace std {} using namespace std;
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include <stdio.h>
-#include <stdarg.h>
-#include <unistd.h>
-#include <math.h>
-#include <mntent.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <cstring>
-#ifdef HAVE_PATHS_H
-#include <paths.h>
-#endif
-
-#include "common.h"
-
-static const char *TRANSFER_RATE_UNITS_STR_LOOKUP[] = 
-{
-   "KiB/s",
-   "KB/s",
-   "MiB/s",
-   "MB/s",
-   "GiB/s",
-   "GB/s",
-   "TiB/s",
-   "TB/s",
-   (char *)NULL,
-};
-
-
-static capacity_t TRANSFER_RATE_UNITS_CONV_LOOKUP[] = 
-{
-   1024ULL,
-   1000ULL,
-   1024ULL * 1024ULL,
-   1000ULL * 1000ULL,
-   1024ULL * 1024ULL * 1024ULL,
-   1000ULL * 1000ULL * 1000ULL,
-   1024ULL * 1024ULL * 1024ULL * 1024ULL,
-   1000ULL * 1000ULL * 1000ULL * 1000ULL,
-};
-
-
-static const size_t MAX_SPRINTF_CHARS = 2048;
-static const size_t MAX_STR_CHARS = 1024;
-
-
-/////////////////////////  basename()  ///////////////////////////////////////
-const char *basename(char *path)
-{
-   char *name = strrchr(path, '/');
-   if (name == NULL)
-      return path;
-   else
-      return name + 1;
-}
-
-
-#ifdef HAVE_MOUNT_CHECK
-/////////////////////////  is_mounted()  /////////////////////////////////////
-bool is_mounted(const char *path)
-{
-   struct stat statbuf;
-   dev_t path_rdev;
-
-   if (stat(path, &statbuf) < 0)
-      return false;
-
-   if (!S_ISBLK(statbuf.st_mode))
-      return false;
-   path_rdev = statbuf.st_rdev;
-
-   FILE *mtabfile;
-   struct mntent *ent;
-
-   mtabfile = setmntent(MNTTAB_PATH, "r");
-   while ((ent = getmntent(mtabfile)) != (struct mntent *)NULL)
-   {
-      if (stat(ent->mnt_fsname, &statbuf) < 0)
-         continue;
-      if (path_rdev == statbuf.st_rdev)
-      {
-         return true;
-      }
-   }
-   endmntent(mtabfile);
-   
-   return false;
-}
-#endif // HAVE_MOUNT_CHECK
-
-
-///////////////////////  strPrintf()  /////////////////////////////////////////
-string strPrintf(const char *fmt, ...)
-{
-   char *tmpStr = new char[MAX_SPRINTF_CHARS + 1];
-
-   va_list ap;
-   va_start(ap, fmt);
-   vsnprintf(tmpStr, MAX_SPRINTF_CHARS, fmt, ap);
-   va_end(ap);
-
-   string returnString = tmpStr;
-   delete[] tmpStr;
-   return returnString;
-}
-
-
-///////////////////////  strSignal()  /////////////////////////////////////////
-string strSignal(int sig)
-{
-#ifdef HAVE_STRSIGNAL
-   return string(strsignal(sig));
-#else
-   return strPrintf("signal %d", sig); 
-#endif
-}
-
-
-///////////////////////  strError()  //////////////////////////////////////////
-string strError(int error_number)
-{
-#ifdef HAVE_STRERROR
-   return string(strerror(error_number));
-#else
-   return strPrintf("errno %d", error_number);  
-#endif
-}
-
-
-//////////////////////////  ConvertUnits()  ////////////////////////////////
-long double convertCapacity(long double bytes, Units_t units)
-{
-   return bytes/(long double)TRANSFER_RATE_UNITS_CONV_LOOKUP[units];
-}
-
-
-////////////////  getTransferRateUnitStr()  ///////////////////////////////////
-const char *getTransferRateUnitsStr(Units_t units)
-{
-   return TRANSFER_RATE_UNITS_STR_LOOKUP[units];
-}
-
-
-////////////////////////  localTime()  ////////////////////////////////////////
-//
-// Encapsulate thread-safe/non-thread safe versions of localtime.  Note that
-// this function is not thread-safe unless localtime_r is actually available 
-// (which means using pthreads on some platforms, e.g., HP-UX).
-//
-void localTime(const time_t *timep, struct tm *result)
-{
-   time_t currentTime;
-   struct tm currentBrokenDownTime;
-   struct tm *currentBrokenDownTimePtr;
-   
-   time(&currentTime);
-#ifdef HAVE_LOCALTIME_R
-   currentBrokenDownTimePtr = localtime_r(&currentTime, 
-                                          &currentBrokenDownTime);
-#else
-   currentBrokenDownTimePtr = localtime_r(&currentTime);
-#endif
-   memcpy(result, currentBrokenDownTimePtr, sizeof(struct tm));
-}

Copied: tags/1.0.8/src/common.cpp (from rev 84, trunk/src/common.cpp)

Deleted: tags/1.0.8/src/common.h
===================================================================
--- trunk/src/common.h	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/common.h	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,120 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// common.h
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-#ifndef COMMON_H
-#define COMMON_H
-
-#include <time.h>
-#include <sys/time.h>
-#include <string>
-#include <stdlib.h>
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Macros  /////////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-#define ROUND_UP_OFFSET(X, M) ((M) - 1 - (((X) + (M) - 1) % (M)))
-#define PTR_ALIGN(Ptr, M) ((Ptr) \
-                           + ROUND_UP_OFFSET ((char *)(Ptr) - (char *)0, (M)))
-
-#ifndef max
-#define max(X,Y) ((X) >= (Y) ? (X) : (Y))
-#endif
-
-#define STRINGIFY(s) #s
-#define QUOTE(s) STRINGIFY(s)
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Typedefs  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-
-typedef enum 
-{
-   VERBOSITY_NONE, 
-   VERBOSITY_SHORT, 
-   VERBOSITY_LONG,
-} Verbosity_t;
-
-typedef enum
-{
-   EXIT_OK = 0,
-   EXIT_ERROR_USAGE,
-   EXIT_ERROR_INVALID_USAGE,
-   EXIT_ERROR_PERM,
-   EXIT_ERROR_SYSTEM,
-   EXIT_ERROR_ILLEGAL_OPERATION,
-   EXIT_ERROR_CAUGHT_EXCEPTION,
-   EXIT_ERROR_DATA_INTEGRITY,
-   EXIT_ERROR_MEMORY_ALLOC,
-   EXIT_ERROR_UNDERRUN,
-   EXIT_ERROR_IO,
-   EXIT_ERROR_SCREEN_SIZE,
-} ExitCode_t;
-
-typedef enum 
-{
-   KIBIBYTES,
-   KILOBYTES,
-   MEBIBYTES,
-   MEGABYTES,
-   GIBIBYTES,
-   GIGABYTES,
-   TEBIBYTES,
-   TERABYTES,
-} Units_t;
-
-typedef enum
-{
-   READING,
-   WRITING,
-} IoDirection_t;
-
-typedef UINT32_TYPE u32_t;
-typedef UINT64_TYPE u64_t;
-typedef unsigned long long capacity_t;
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Constants  //////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-#ifdef __CYGWIN__
-static const unsigned int DEFAULT_SCREEN_ROWS = 25;
-static const unsigned int DEFAULT_SCREEN_COLUMNS = 79;
-#else
-static const unsigned int DEFAULT_SCREEN_ROWS = 24;
-static const unsigned int DEFAULT_SCREEN_COLUMNS = 80;
-#endif
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Functions  //////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-const char *basename(char *path);
-string strPrintf(const char *fmt, ...);
-string strSignal(int sig);
-string strError(int error_number);
-bool is_mounted(const char *path);
-long double convertCapacity(long double bytes, Units_t units);
-const char *getTransferRateUnitsStr(Units_t units);
-void localTime(const time_t *timep, struct tm *result);
-
-#endif // COMMON_H

Copied: tags/1.0.8/src/common.h (from rev 84, trunk/src/common.h)

Deleted: tags/1.0.8/src/spew.cpp
===================================================================
--- trunk/src/spew.cpp	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/spew.cpp	2010-05-14 05:42:39 UTC (rev 90)
@@ -1,1527 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// spew.cpp
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-namespace std {} using namespace std;
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include <string.h>
-#include <stdlib.h>
-#include <stdarg.h>
-#include <stdio.h>
-#include <unistd.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <sys/time.h>
-#include <fcntl.h>
-#include <errno.h>
-#include <errno.h>
-#include <ctype.h>
-#include <iostream>
-#include <string>
-#include <vector>
-#include <list>
-#include <iterator>
-#include <string>
-#include <popt.h>
-#include <signal.h>
-
-#include "common.h"
-#include "Log.h"
-#include "Job.h"
-#include "WriteJob.h"
-#include "ReadJob.h"
-#include "Random.h"
-#include "SpewDisplay.h"
-#include "SpewConsole.h"
-#include "SpewTui.h"
-#include "TransferInfoList.h"
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Typedefs  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-enum operation_enum {OPERATION_NONE,
-                     OPERATION_WRITE,
-                     OPERATION_READ, 
-                     OPERATION_READ_AFTER_WRITE};
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////////  Constants  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-static const char CANONICAL_PROG_NAME[] = "spew";
-static const char *PROG_NAME_LOOKUP[] =
-{
-   (char *)NULL,
-   "spew",
-   "gorge",
-   "regorge",
-   (char *)NULL,
-
-};
-static const char SPEWRC_ENV[] = "SPEWRC";
-static const char DEFAULT_SPEWRC_FILENAME[] = ".spewrc";
-static const char SYSTEM_SPEWRC_FILENAME[] = "spew.conf";
-static const char PROG_VERSION[] = VERSION;
-static const int MAX_TMP_STR_LEN = 1024;
-static const unsigned int INDENT_SIZE = 4;
-static const char INDENT_CHAR = ' ';
-
-static const Units_t DEFAULT_UNITS = KIBIBYTES;
-static const capacity_t DEFAULT_MIN_BUFFER_SIZE = Transfer::BUFFER_SIZE_INCREMENT;
-static const capacity_t DEFAULT_MAX_BUFFER_SIZE = DEFAULT_MIN_BUFFER_SIZE;
-static unsigned int DEFAULT_ITERATIONS = 1;
-
-static const u32_t DEFAULT_SEED = 0;
-static const TransferInfoList::fill_method_t DEFAULT_FILL_METHOD = TransferInfoList::SEQUENTIAL_FILL;
-static const Job::io_method_t DEFAULT_IO_METHOD = Job::ASYNCH_IO;
-static const Job::pattern_t DEFAULT_PATTERN = Job::PATTERN_NONE;
-static const char *PATTERN_LOOKUP[] = 
-{
-   "none",
-   "zeros",
-   "ones",
-   "alt",
-   "numbers",
-   "random",
-   "#",
-   (char *)NULL,
-};
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////////  Global Variables  ////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-char *gPrgName = NULL;
-operation_enum gOperation;
-int gGetVersion = 0;
-Verbosity_t gVerbosity = VERBOSITY_SHORT;
-Job::io_method_t gIOMethod = DEFAULT_IO_METHOD;
-TransferInfoList::fill_method_t gFillMethod = DEFAULT_FILL_METHOD;
-Units_t gUnits = DEFAULT_UNITS;
-bool gProgress = false;
-int gIterationsToDo = 1;
-int gContinueAfterError = 0;
-u32_t gSeed = 0;
-capacity_t gMinBufferSize = DEFAULT_MIN_BUFFER_SIZE;
-capacity_t gMaxBufferSize = DEFAULT_MAX_BUFFER_SIZE;
-capacity_t gOffset = 0;
-Job::pattern_t gPattern = DEFAULT_PATTERN;
-unsigned char gUserPattern = 0;
-capacity_t gTransferSize = 0;
-string gFile = "";
-bool gUseTui = false;
-string gLogfilePath = "";
-bool gUseStdRcFiles = true;
-Log *gLogger = (Log *)NULL;
-capacity_t gJobId = 0;
-SpewDisplay *gDisplay = (SpewDisplay *)NULL; 
-unsigned int gCurrentIteration = 0;
-TimeHack gTotalReadTransferTime;
-TimeHack gTotalWriteTransferTime;
-capacity_t gTotalBytesRead = 0;
-capacity_t gTotalBytesWritten = 0;
-capacity_t gTotalWriteOps = 0;
-capacity_t gTotalReadOps = 0;
-TimeHack gProgramStartTime;
-unsigned int gFoundTransferErrors = 0;
-
-//////////////////////////////////////////////////////////////////////////////
-////////////////////  Function Prototypes  ///////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-void error_msg(const char *fmt, ...);
-void note(const char *fmt, ...);
-void usage();
-bool parse_options(int argc, const char **argv, string& cmdArgs);
-bool validate_options();
-void end_program(int exitCode);
-void end_program(int exitCode, const char *fmt, ...);
-void update_transfer_totals(const Job *job,
-                            IoDirection_t ioDirection);
-void run_statistics(unsigned int iterations);
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////  Function Definitions  ////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-
-////////////////////////  error_msg()  ///////////////////////////////////////
-void error_msg(const char *fmt, ...)
-{
-   fprintf(stderr, "%s: ", gPrgName);
-   va_list ap;
-   va_start(ap, fmt);
-   vfprintf(stderr, fmt, ap);
-   va_end(ap);
-   fflush(stderr);
-}
-
-
-/////////////////////////  note()  ///////////////////////////////////////////
-void note(const char *fmt, ...)
-{
-   va_list ap;
-   va_start(ap, fmt);
-   vfprintf(stdout, fmt, ap);
-   va_end(ap);
-   fflush(stdout);
-}
-
-
-//////////////////////////  version()  ///////////////////////////////////////
-void version()
-{
-   note("%s %s\n", CANONICAL_PROG_NAME, PROG_VERSION);
-   note("Copyright 2007 Hewlett-Packard Corp.\n");
-   note("Written by Andrew Patterson <andrew.patterson at hp.com>\n");
-}
-
-
-//////////////////////////  help()  //////////////////////////////////////////
-void help(poptContext &context)
-{
-   poptSetOtherOptionHelp(context, "--write|--read|--read-after-write [OPTION]... TRANSFER_SIZE[kKmMgG] FILE\n"
-"An I/O performance measurement and load generation tool. Writes and/or \n"
-"reads generated data to or from a character device, block device, or \n"
-"regular file.\n");
-
-   poptPrintHelp(context, stdout, 0);
-
-   char fmtStr[] = 
-"\n"
-"  FILE                              Regular or device file to write data to.\n"
-"  LOGFILE                           Path to a file used for logging.\n"
-"  MAX_BUFFER_SIZE                   Minimum buffer size used in each \n"
-"                                    read(2)/write(2) call (default is\n"
-"                                    MIN_BUFFER_SIZE bytes).\n"
-"                                    MAX_BUFFER_SIZE. Must be an even\n"
-"                                    multiple of %llu bytes and can be\n"
-"                                    specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"                                    MAX_BUFFER_SIZE defaults to \n"
-"                                    MIN_BUFFER_SIZE.  If MAX_BUFFER_SIZE >\n"
-"                                    MIN_BUFFER_SIZE, random buffers sizes\n"
-"                                    between the two limits are used.\n"
-"                                    MAX_BUFFER_SIZE must be an even\n"
-"                                    multiple of MIN_BUFFER_SIZE.\n"
-"  MIN_BUFFER_SIZE                   Minimum buffer size used in each \n"
-"                                    read(2)/write(2) call (default is\n"
-"                                    %llu bytes).\n"
-"                                    MIN_BUFFER_SIZE. Must be an even\n"
-"                                    multiple of %llu bytes and can be\n"
-"                                    specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"  OFFSET                            Position to seek to in the file before\n"
-"                                    starting I/O (default is 0). OFFSET\n"
-"                                    must be an even multiple of %llu bytes\n"
-"                                    and can be specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"  PATTERN                           Data pattern used when writing/reading\n"
-"                                    data. Available patterns are: %s, \n"
-"                                    %s, %s, %s, %s, %s, and \"%s\"\n"
-"                                    (where \"%s\" is a number between 0-255). The\n"
-"                                    default pattern is \"%s\".\n"
-"  RCFILE                            Read additional command-line options\n"
-"                                    from RCFILE.  Other options on the\n"
-"                                    command-line will override options in\n"
-"                                    RCFILE.\n"
-"  SEED                              Used to seed the random number generator\n"
-"                                    Must be >= 1 and <= 2^32.\n"
-"  TRANSFER_SIZE                     Total number of bytes to transfer (must\n"
-"                                    be an even multiple of both\n"
-"                                    MIN_BUFFER_SIZE and MAX_BUFFER)SIZE).\n"
-"                                    TRANSFER_SIZE can be specified in\n" 
-"                                    bytes, kilobytes, megabytes, or \n"
-"                                    gigabytes.\n"
-"  UNITS                             Kibibytes(k), kilobytes(K), \n"
-"                                    mebibytes(m), megabytes(M),\n" 
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-      "";
-
-   char outStr[4096];
-   snprintf(outStr, sizeof(outStr) - 1, fmtStr,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::OFFSET_INCREMENT,
-            PATTERN_LOOKUP[Job::PATTERN_NONE],
-            PATTERN_LOOKUP[Job::PATTERN_ZEROS],
-            PATTERN_LOOKUP[Job::PATTERN_ONES],
-            PATTERN_LOOKUP[Job::PATTERN_ALTERNATING],
-            PATTERN_LOOKUP[Job::PATTERN_RANDOM],
-            PATTERN_LOOKUP[Job::PATTERN_TRANSFER_NUMBERS],
-            PATTERN_LOOKUP[Job::PATTERN_USER_DEFINED],
-            PATTERN_LOOKUP[Job::PATTERN_USER_DEFINED],
-            PATTERN_LOOKUP[DEFAULT_PATTERN]);
-   fprintf(stdout, outStr);
-
-   fprintf(stdout, "\nReport bugs to Andrew Patterson <andrew.patterson at hp.com>.\n");
-}
-
-
-//////////////////////////  usage()  /////////////////////////////////////////
-void usage(poptContext &context)
-{
-   poptSetOtherOptionHelp(context, "TRANSFER_SIZE[kKmMgG] FILE");
-   poptPrintUsage(context, stdout, 0);
-}
-
-
-//////////////////////////  get_size()  //////////////////////////////////////
-capacity_t get_size(const char *arg)
-{
-   char units;
-   capacity_t size;
-
-   if (sscanf(arg, "%llu%c", &size, &units) == 2)
-   {
-      switch (units)
-      {
-      case 'k':
-      case 'K':
-         size *= 1024LL;
-         break;
-      case 'm':
-      case 'M':
-         size *= 1024LL * 1024LL;
-         break;
-      case 'g':
-      case 'G':
-         size *= 1024LL * 1024LL * 1024LL;
-         break;
-      case 't':
-      case 'T':
-         size *= 1024LL * 1024LL * 1024LL * 102;
-         break;
-      default:
-         error_msg("Invalid unit in argument \"%s\"\n", arg);
-         exit(EXIT_ERROR_USAGE);
-         break;
-      }
-   }
-   else if (sscanf(arg, "%llu", &size) != 1)
-   {
-      error_msg("Could not parse size for argument \"%s\".\n", arg);
-      exit(EXIT_ERROR_USAGE);
-   }
-   return size;
-}
-
-
-//////////////////////////  get_units()  //////////////////////////////////////
-Units_t get_units(const char *arg)
-{
-   char unitsCh;
-   Units_t units;
-
-   if (sscanf(arg, "%c", &unitsCh) == 1)
-   {
-      switch (unitsCh)
-      {
-      case 'k':
-         units = KIBIBYTES;
-         break;
-      case 'K':
-         units = KILOBYTES;
-         break;
-      case 'm':
-         units = MEBIBYTES;
-         break;
-      case 'M':
-         units = MEGABYTES;
-         break;
-      case 'g':
-         units = GIBIBYTES;
-         break;
-      case 'G':
-         units = GIGABYTES;
-         break;
-      case 't':
-         units = TEBIBYTES;
-         break;
-      case 'T':
-         units = TERABYTES;
-         break;
-      default:
-         error_msg("Invalid unit in argument \"%s\" - use kKmMgG.\n", arg);
-         exit(EXIT_ERROR_USAGE);
-         break;
-      }
-   }
-   else
-   {
-      error_msg("Could not parse units in argument \"%s\"\n", arg);
-      exit(EXIT_ERROR_USAGE);
-   }
-   return units;
-}
-
-
-//////////////////////////  parse_rcfile()  ///////////////////////////////////
-bool parse_rcfile(FILE *rcfile,
-                  string& cmdArgs)
-{
-   char rcArgs[MAX_TMP_STR_LEN];
-   int len;
-   while (fgets(rcArgs, MAX_TMP_STR_LEN, rcfile) != (char *)NULL)
-   {
-      // Chop off string after comment character.
-      char *commentStart = strchr(rcArgs, '#');
-      if (commentStart)
-         *commentStart = '\0';
-      len = strlen(rcArgs);
-      if (rcArgs[len - 1] == '\n')
-         rcArgs[len - 1] = '\0';
-      if (rcArgs[0] != '\0')
-      {
-         cmdArgs += rcArgs;
-         cmdArgs += " ";
-      }
-   }
-   return true;
-}
-
-
-//////////////////////////  read_rcfiles()  ///////////////////////////////////
-bool read_rcfiles(int argc, const char **argv, string& cmdArgs)
-{
-   struct stat statbuf;
-   string rcFilePath;
-   vector<string> rcFilePaths;
-
-
-   // Check command-line for --no-rcfiles option.
-   for (int i = 0; i < argc; i++)
-   {
-      if (strncmp(argv[i], "--no-rcfiles", strlen("--no-rcfiles")) == 0)
-      {
-         gUseStdRcFiles = false;
-         break;
-      }
-   }
-
-   // Read standard config locations.
-   if (gUseStdRcFiles)
-   {
-      // Read system-wide rcfile if it exists.
-      rcFilePath = QUOTE(SYSCONFDIR);
-      rcFilePath += "/";
-      rcFilePath += SYSTEM_SPEWRC_FILENAME;
-      if (stat(rcFilePath.c_str(), &statbuf) >= 0)
-      {
-         rcFilePaths.push_back(rcFilePath);
-      }
-      else
-      {
-         if (errno != ENOENT)
-         {
-            error_msg("Cannot access rc file \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-         }
-      }
-
-      rcFilePath = "";
-      if (getenv(SPEWRC_ENV))
-      {
-         rcFilePath = getenv(SPEWRC_ENV);
-      }
-      else
-      {
-         char *home = getenv("HOME");
-         if (home)
-         {
-            rcFilePath = home;
-            rcFilePath += "/";
-            rcFilePath += DEFAULT_SPEWRC_FILENAME;
-         }
-      }
-      if (stat(rcFilePath.c_str(), &statbuf) >= 0)
-      {
-         rcFilePaths.push_back(rcFilePath);
-      }
-      else
-      {
-         if (errno != ENOENT)
-         {
-            error_msg("Cannot access rc file \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-         }
-      }
-   }
-
-   // Check the command-line for --rcfile.
-   for (int i = 1; i < argc; i++)
-   {
-      rcFilePath = "";
-      if (strncmp(argv[i], "--rcfile", 8) == 0)
-      {
-         const char *eqPos = strrchr(argv[i], '=');
-         if (eqPos == (char *)NULL)
-         {
-            if (i + 1 < argc)
-            {
-               rcFilePath = argv[i+1];
-            }
-            else
-            {
-               error_msg("Missing RCFILE argument.\n");
-               return false;
-            }
-         }
-         else
-         {
-            rcFilePath = eqPos + 1;
-         }
-         if (stat(rcFilePath.c_str(), &statbuf) < 0)
-         {
-            error_msg("Cannot access RCFILE \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-            return false;
-         }
-         else
-            rcFilePaths.push_back(rcFilePath);
-         break;
-      }
-   }
-
-   vector<string>::iterator pathIter;
-   for (pathIter = rcFilePaths.begin();
-        pathIter != rcFilePaths.end();
-        pathIter++)
-   {
-      FILE *rcfile = fopen(pathIter->c_str(), "r");
-      if (rcfile == (FILE *)NULL)
-      {
-         error_msg("Cannot open rc file \"%s\" -- %s.\n", 
-                   pathIter->c_str(), strError(errno).c_str());
-      }
-      else
-      {
-         parse_rcfile(rcfile, cmdArgs);
-         fclose(rcfile);
-      }
-   }
-
-   return true;
-}
-
-
-//////////////////////////  parse_options()  /////////////////////////////////
-bool parse_options(int argc, const char **argv, string& cmdArgs)
-{
-   char *minBufferSizeArgStr = (char *)NULL;
-   char *maxBufferSizeArgStr = (char *)NULL;
-   char *offsetArgStr = (char *)NULL;
-   char *patternArgStr = (char *)NULL;
-   char *unitsArgStr = (char *)NULL;
-   char *logfilePathArgStr = (char *)NULL;
-   char *dummyArgStr = (char *)NULL;
-   int writeArg = 0;
-   int readArg = 0;
-   int readAfterWriteArg = 0;
-   int seedArg = 0;
-   int helpArg = 0;
-   int usageArg = 0;
-   int iterationsArg = -1;
-   int noStatisticsArg = 0;
-   int statisticsArg = 0;
-   int detailedStatisticsArg = 0;
-   int noProgressArg = 0;
-   int progressArg = 0;
-   int noTuiArg = 0;
-   int tuiArg = 0;
-   int syncArg = 0;
-   int directArg = 0;
-   int randomArg = 0;
-   int generateLoadArg = 0;
-   int useStdRcFilesArg = 1;
-
-   struct poptOption optionsTable[] =  {
-      {"max-buffer-size", 'B', POPT_ARG_STRING, &maxBufferSizeArgStr, 0, "Each read(2)/write(2) call uses a maximum buffer of size BUFFER_SIZE.", "BUFFER_SIZE"},
-      {"min-buffer-size", 'b', POPT_ARG_STRING, &minBufferSizeArgStr, 0, "Each read(2)/write(2) call uses a minimum buffer of size BUFFER_SIZE.", "BUFFER_SIZE"},
-      {"continue-after-error", 'c', POPT_ARG_NONE, &gContinueAfterError, 0, "Continue after data integrity errors.", NULL},
-#ifdef HAVE_DIRECT_IO
-      {"direct", 'd', POPT_ARG_NONE, &directArg, 0, "Use direct I/O. Should only be used on block device files. Not all operating systems support direct I/O", NULL},
-#endif
-      {"generate-load", 'g', POPT_ARG_NONE, &generateLoadArg, 0, "Equivalent to: -v -t -P -p random -i 0.",  NULL},
-      {"iterations", 'i', POPT_ARG_INT, &iterationsArg, 0, "Write/read data COUNT times. If count is 0, repeats forever.", "COUNT"},
-      {"logfile", 'l', POPT_ARG_STRING, &logfilePathArgStr, 0, "Send log messages to LOGFILE.", "LOGFILE"},
-      {"no-progress", 0, POPT_ARG_NONE, &noProgressArg, 0, "Don't show progress (default).", NULL},
-      {"no-rcfiles", 0, POPT_ARG_NONE, NULL, 0, "Don't use standard rcfiles.", NULL},
-      {"no-statistics", 'q', POPT_ARG_NONE, &noStatisticsArg, 0, "Don't output statistics.", NULL},
-      {"no-tui", 0, POPT_ARG_NONE, &noTuiArg, 0, "Don't use TUI interface.", NULL},
-      {"offset", 'o', POPT_ARG_STRING, &offsetArgStr, 0, "Seek to OFFSET before starting I/O.", "OFFSET"},
-      {"progress", 'P', POPT_ARG_NONE, &progressArg, 0, "Show progress.", NULL},
-      {"pattern", 'p', POPT_ARG_STRING, &patternArgStr, 0, "Use data pattern PATTERN when reading or writing data.", "PATTERN"},
-      {"random", 'r', POPT_ARG_NONE, &randomArg, 0, "Read/Write buffers to random offsets.", NULL},
-      {"raw", 0, POPT_ARG_NONE, &readAfterWriteArg, 0, "An alias for --read-after-write.", NULL},
-      {"rcfile", 0, POPT_ARG_STRING, &dummyArgStr, 0, "Read command-line options from RCFILE.", "RCFILE"},
-      {"read", 0, POPT_ARG_NONE, &readArg, 0, "Read date from FILE.", NULL},
-      {"read-after-write", 0, POPT_ARG_NONE, &readAfterWriteArg, 0, "Read back data after writing to FILE.", NULL},
-      {"seed", 'S', POPT_ARG_INT, &seedArg, 0, "Use SEED for random number seed.","SEED"},
-      {"sync", 's', POPT_ARG_NONE, &syncArg, 0, "Use synchronous I/O.", NULL},
-      {"statistics", 0, POPT_ARG_NONE, &statisticsArg, 0, "Output statistics (default).", NULL},
-      {"tui", 't', POPT_ARG_NONE, &tuiArg, 0, "Use curses-based, terminal user interface.", NULL},
-      {"units", 'u', POPT_ARG_STRING, &unitsArgStr, 0, "Show transfer rate in UNITS units.", "UNITS"},
-      {"usage", 0, POPT_ARG_NONE, &usageArg, 0, "Show brief usage message and exit.", NULL},
-      {"version", 'V', POPT_ARG_NONE, &gGetVersion, 0, "Output version information and exit.", NULL},
-      {"detailed-statistics", 'v', POPT_ARG_NONE, &detailedStatisticsArg, 0, "Output detailed statistics.", NULL},
-      {"write", 0, POPT_ARG_NONE, &writeArg, 0, "Write data to FILE.", NULL},
-      {"help", '?', POPT_ARG_NONE, &helpArg, 0, "Show this help and exit.", NULL},
-      POPT_TABLEEND
-   };
-
-   cmdArgs = "";
-   if (!read_rcfiles(argc, argv, cmdArgs))
-       return false;
-   for (int i = 1; i < argc; i++)
-   {
-      cmdArgs += argv[i];
-      cmdArgs += " ";
-   }
-   cmdArgs = " " + cmdArgs;
-   cmdArgs = argv[0] + cmdArgs;
-   int newArgc;
-   const char **newArgv;
-   poptParseArgvString((char *)cmdArgs.c_str(), &newArgc, &newArgv);
-   poptContext context = poptGetContext(gPrgName,
-                                        newArgc, 
-                                        newArgv, 
-                                        optionsTable, 
-                                        POPT_CONTEXT_POSIXMEHARDER);
-
-   int rc = poptGetNextOpt(context);
-   if (rc < -1)
-   {
-      switch (rc)
-      {
-      case POPT_ERROR_BADOPT:
-         error_msg("bad or unknown option \"%s\"\n.", 
-                   poptBadOption(context, 0));
-         break;
-      default:
-         error_msg("%s.\n", poptStrerror(rc));
-         break;
-      }
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Help.
-   if (helpArg)
-   {
-      help(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Usage.
-   if (usageArg)
-   {
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Version.
-   if (gGetVersion)
-   {
-      poptFreeContext(context);
-      return true;
-   }
-
-   // Operation.
-   if (writeArg + readArg + readAfterWriteArg > 1)
-   {
-      error_msg("Only one operation (--write|--read|--read-after-write) allowed.\n");
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-   if (writeArg)
-      gOperation = OPERATION_WRITE;
-   else if (readArg)
-      gOperation = OPERATION_READ;
-   else if (readAfterWriteArg)
-      gOperation = OPERATION_READ_AFTER_WRITE;
-
-   // Min Buffer size.
-   if (minBufferSizeArgStr)
-   {
-      gMinBufferSize = get_size(minBufferSizeArgStr);
-   }
-   // Max Buffer size.
-   if (maxBufferSizeArgStr)
-   {
-      gMaxBufferSize = get_size(maxBufferSizeArgStr);
-   }
-   else
-   {
-      gMaxBufferSize = gMinBufferSize;
-   }
-
-   // Offset.
-   if (offsetArgStr)
-   {
-      gOffset = get_size(offsetArgStr);
-   }
-
-   // Pattern.
-   if (patternArgStr)
-   {
-      bool found = false;
-      for (int pattern = (int)Job::PATTERN_NONE;
-           PATTERN_LOOKUP[pattern] != (char *)NULL;
-           pattern++)
-      {
-         if (strcmp(patternArgStr, PATTERN_LOOKUP[pattern]) == 0)
-         {
-            gPattern = (Job::pattern_t)pattern;
-            found = true;
-            break;
-         }
-      }
-      if (!found) // Check for user pattern.
-      {
-         long int userPattern;
-         char *endPtr;
-         errno = 0;
-         userPattern = strtol(patternArgStr, &endPtr, 0);
-         if (errno == 0 && 
-             *endPtr == '\0' && 
-             userPattern >= 0 && 
-             userPattern <= 255)
-         {
-            found = true;
-            gPattern = Job::PATTERN_USER_DEFINED;
-            gUserPattern = (unsigned char)userPattern;
-         }
-      }
-      if (!found)
-      {
-         error_msg("\"%s\" is not a valid pattern. Use none, zeros, ones, alt, numbers, random or # (where # is any number between 0-255).\n", patternArgStr);
-         usage(context);
-         poptFreeContext(context);
-         return false;
-      }
-   }  
-
-   // Units.
-   if (unitsArgStr)
-   {
-      gUnits = get_units(unitsArgStr);
-   }
-
-   // Logfile.
-   if (logfilePathArgStr)
-   {
-      gLogfilePath = logfilePathArgStr;
-   }
-   
-   // Verbosity.
-   if (noStatisticsArg)
-      gVerbosity = VERBOSITY_NONE;
-   if (statisticsArg)
-      gVerbosity = VERBOSITY_SHORT;
-   if (detailedStatisticsArg)
-      gVerbosity = VERBOSITY_LONG;
-   
-   // Sync, direct I/O, and random seek.
-   if (syncArg)
-      gIOMethod = Job::SYNCH_IO;
-   if (directArg)
-      gIOMethod = Job::DIRECT_IO;
-   if (randomArg)
-      gFillMethod = TransferInfoList::RANDOM_FILL;
-
-   // Progress.
-   if (noProgressArg)
-      gProgress = false;
-   if (progressArg)
-      gProgress = true;
-
-   // Iterations.
-   if (iterationsArg >= 0)
-      gIterationsToDo = iterationsArg;
-
-   // Seed.
-   if (seedArg >= 0)
-      gSeed = (u32_t)seedArg;
-
-   // TUI.
-   if (noTuiArg)
-      gUseTui = false;
-   if (tuiArg)
-      gUseTui = true;
-
-   // Generate load -v -t -P -p random -i 0, above options will override 
-   // these.
-   if (generateLoadArg)
-   {
-      if (!noProgressArg)
-         gProgress = true;
-      if (!noStatisticsArg && !statisticsArg)
-         gVerbosity = VERBOSITY_LONG;
-      if (!noTuiArg)
-         gUseTui = true;
-      if (!patternArgStr)
-         gPattern = Job::PATTERN_RANDOM;
-      if (iterationsArg < 0)
-         gIterationsToDo = 0;
-   }
-   if (gIterationsToDo < 0)
-      gIterationsToDo = DEFAULT_ITERATIONS;
-
-   // Count the rest of the arguments.
-   const char **argsLeft = poptGetArgs(context);
-   int argsCount = 0;
-   if (argsLeft)
-   {
-      while (argsLeft[argsCount] != NULL)
-         argsCount++;
-   }
-   if (argsCount < 2)
-   {
-      error_msg("Need TRANSFER_SIZE and FILE.\n");
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   gTransferSize = get_size(poptGetArg(context));
-   gFile = poptGetArg(context);
-
-   if (gSeed == DEFAULT_SEED)
-   {
-      gSeed = Random().getRandom32();
-      gJobId = 0;
-   }
-   else
-   {
-      gJobId = gSeed;
-   }
-
-   poptFreeContext(context);
-   return true;
-}
-
-
-/////////////////////////  validate_options()  ////////////////////////////////
-bool validate_options()
-{
-   if (gGetVersion)
-      return true;
-
-   if (gOperation == OPERATION_NONE)
-   {
-      error_msg("Must specify an operation (--write|--read|--read-after-write).\n");
-      return false;
-   }
-
-   if (gMinBufferSize > gMaxBufferSize)
-   {
-      error_msg("Minimum buffer size must be <= maximum buffer size.\n");
-      return false;
-   }
-   if (gMaxBufferSize % gMinBufferSize != 0)
-   {
-      error_msg("Maximum buffer size must be an even multiple of minimum buffer size.\n");
-      return false;
-   }
-   if (gMinBufferSize % Transfer::BUFFER_SIZE_INCREMENT != 0)
-   {
-      error_msg("Minimum buffer size must be an even multiple of %llu bytes.\n",  Transfer::BUFFER_SIZE_INCREMENT);
-      return false;
-   }
-   if (gMaxBufferSize % Transfer::BUFFER_SIZE_INCREMENT != 0)
-   {
-      error_msg("Maximum buffer size must be an even multiple of %llu bytes.\n", Transfer::BUFFER_SIZE_INCREMENT);
-      return false;
-   }
-   if (gTransferSize < gMinBufferSize)
-   {
-      error_msg("TRANSFER_SIZE must be >= MIN_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize < gMaxBufferSize)
-   {
-      error_msg("TRANSFER_SIZE must be >= MAX_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize % gMinBufferSize != 0)
-   {
-      error_msg("TRANSFER_SIZE must be an even multiple of MIN_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize % gMaxBufferSize != 0)
-   {
-      error_msg("TRANSFER_SIZE must be an even multiple of MAX_BUFFER_SIZE.\n");
-      return false;
-   }
-
-
-#ifdef HAVE_DIRECT_IO
-   if (gIOMethod == Job::DIRECT_IO)
-   {
-      if (gMinBufferSize % Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT != 0)
-      {
-         error_msg("MIN_BUFFER_SIZE must be a multiple of %llu bytes when using direct I/O. Use -b|--min-buffer-size to set MIN_BUFFER_SIZE.\n", Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT);
-         return false;
-      }
-      if (gMaxBufferSize % Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT != 0)
-      {
-         error_msg("MAX_BUFFER_SIZE must be a multiple of %llu bytes when using direct I/O. Use -B|--max-buffer-size to set MAX_BUFFER_SIZE.\n", Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT);
-         return false;
-      }
-   }
-#endif
-
-#ifdef HAVE_MOUNT_CHECK
-   if (is_mounted(gFile.c_str()))
-   {
-      error_msg("Cannot use a mounted device for FILE.\n");
-      return false;
-   }
-#endif // HAVE_MOUNT_CHECK
-
-   return true;
-}
-
-
-//////////////////////////  end_program()  ////////////////////////////////////
-void end_program(int exitCode)
-{
-   end_program(exitCode, "");
-}
-
-
-//////////////////////////  end_program()  ////////////////////////////////////
-void end_program(int exitCode, const char *fmt, ...)
-{
-   char msg[MAX_TMP_STR_LEN];
-
-   if (gDisplay)
-      gDisplay->close();
-   
-   va_list ap;
-   va_start(ap, fmt);
-   vsnprintf(msg, MAX_TMP_STR_LEN, fmt, ap);
-   va_end(ap);
-
-   if (strlen(msg) > 0)
-   {
-      if (gLogger)
-         gLogger->logError(msg);
-      error_msg(msg);
-   }
-
-   if (gLogger)
-   {
-      if (exitCode == EXIT_OK)
-         run_statistics(gCurrentIteration);
-      if (gFoundTransferErrors > 0)
-      {
-         if (gLogfilePath.length() > 0)
-         {
-            gLogger->showError("One or more data integrity or I/O errors were encountered during data\ntransfers.  Descriptions of these errors can be found in the logfile\n%s.\n", gLogfilePath.c_str());
-         }
-         else
-         {
-            gLogger->showError("One or more data integrity or I/O errors were encountered during data\ntransfers.  Descriptions of these types of errors are output to a log file if\nthe -l|--logfile option is used.\n");
-         }
-      }
-      gLogger->logFinish();
-      gLogger->close();
-   }
-
-   exit(exitCode);
-}
-
-
-//////////////////////////  cleanup()  ///////////////////////////////////////
-void cleanup(int signal)
-{
-   if (signal == SIGQUIT || signal == SIGINT)
-      end_program(EXIT_OK);
-   else
-      end_program(EXIT_ERROR_CAUGHT_EXCEPTION, 
-                  "Caught signal \"%s\", exiting.\n", strSignal(signal).c_str());
-}
-
-
-//////////////////////////  resize()  /////////////////////////////////////////
-void resize(int sig)
-{
-   static int working = 0;  // Latch for repeated interrupts.
-
-   if (!working++)
-   {
-      if (gDisplay)
-         gDisplay->resize();
-   }
-   working--;
-}
-
-
-//////////////////////////  update_job_times()  //////////////////////////////
-void update_transfer_totals(const Job *job,
-                            IoDirection_t ioDirection)
-{
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalBytesRead += job->getBytesTransferred();
-      gTotalReadTransferTime += job->getTransferEndTime() - job->getTransferStartTime(); 
-      break;
-   case WRITING:
-      gTotalBytesWritten += job->getBytesTransferred();
-      gTotalWriteTransferTime += job->getTransferEndTime() - job->getTransferStartTime(); 
-      break;
-   }
-}
-
-
-//////////////////////////  intermediate_statistics() /////////////////////////
-void intermediate_statistics(const Job *job, 
-                             IoDirection_t ioDirection)
-{
-   TimeHack currentTime(TimeHack::getCurrentTime());
-
-   gDisplay->intermediateStatistics(job->getHackBytesTransferred(),
-                                    job->getHackEndTime() - job->getHackStartTime(),
-                                    job->getJobBytesTransferred(),
-                                    currentTime - job->getJobStartTime(),
-                                    job->getTransferSize(),
-                                    gTotalBytesRead,
-                                    gTotalReadTransferTime.getTime(),
-                                    gTotalBytesWritten,
-                                    gTotalWriteTransferTime.getTime(), 
-                                    currentTime - gProgramStartTime);
-}
-
-
-//////////////////////////  cumulative_statistics()  //////////////////////////
-void cumulative_statistics(const Job *job, 
-                           unsigned int iteration,
-                           IoDirection_t ioDirection)
-{
-   TimeHack now(TimeHack::getCurrentTime());
-   TimeHack jobTransferTime(job->getJobEndTime() - job->getJobStartTime());
-
-
-   gDisplay->cumulativeStatistics(job->getJobBytesTransferred(), 
-                                  jobTransferTime.getTime(),
-                                  job->getTotalNumberOfTransfers(),
-                                  gTotalBytesRead,
-                                  gTotalReadTransferTime.getTime(),
-                                  gTotalReadOps,
-                                  gTotalBytesWritten,
-                                  gTotalWriteTransferTime.getTime(), 
-                                  gTotalWriteOps,
-                                  now - gProgramStartTime);
-
-   long double transferRate = convertCapacity((long double)job->getJobBytesTransferred(), gUnits)/jobTransferTime.getTime();
-   long double iops = (long double)job->getTotalNumberOfTransfers()/(long double)jobTransferTime.getTime();
-
-   switch (ioDirection)
-   {
-   case READING:
-      gLogger->logNote("Iter: %5d   RTR: %11.2Lf %-5s   TT: %s   IOPS: %11.2Lf\n",
-                       iteration,
-                       transferRate, 
-                       getTransferRateUnitsStr(gUnits), 
-                       jobTransferTime.getElapsedTimeStr().c_str(),
-                       iops);
-      break;
-   case WRITING:
-      gLogger->logNote("Iter: %5d   WTR: %11.2Lf %-5s   TT: %s   IOPS: %11.2Lf\n",
-                       iteration,
-                       transferRate, 
-                       getTransferRateUnitsStr(gUnits), 
-                       jobTransferTime.getElapsedTimeStr().c_str(),
-                       iops);
-      break;
-   }  
-}
-
-
-//////////////////////////  run_statistics()  ////////////////////////////////
-void run_statistics(unsigned int iterations)
-{
-   unsigned int device;
-   device = Log::OUTPUT_LOG_STDOUT;
-   if (gVerbosity == VERBOSITY_LONG)
-      device |= Log::OUTPUT_DISPLAY_STDOUT;
-
-   TimeHack now(TimeHack::getCurrentTime());
-
-   if (!gUseTui)
-      gLogger->note(device, "\n");
-   gLogger->note(device, "Total iterations:                %17u\n",
-                 iterations);
-   gLogger->note(device, "Total runtime:                   %17s\n",
-                 gProgramStartTime.getTimeDiffStr(now).c_str());
-
-   if (gTotalBytesWritten > 0)
-   {
-      long double writeTransferRate = convertCapacity((long double)gTotalBytesWritten, gUnits)/(long double)gTotalWriteTransferTime.getTime();
-      long double writeIops = (long double)gTotalWriteOps/(long double)gTotalWriteTransferTime.getTime();
-      gLogger->note(device, "Total write transfer time (WTT): %17s\n", 
-                    gTotalWriteTransferTime.getElapsedTimeStr().c_str());
-      gLogger->note(device, "Total write transfer rate (WTR): %11.2Lf %-5s\n",
-                    writeTransferRate, getTransferRateUnitsStr(gUnits));
-      gLogger->note(device, "Total write IOPS:                %11.2Lf IOPS\n", writeIops);
-                    
-   }
-   if (gTotalBytesRead > 0)
-      
-   {
-      long double readTransferRate = convertCapacity((long double)gTotalBytesRead, gUnits)/(long double)gTotalReadTransferTime.getTime();
-      long double readIops = (long double)gTotalReadOps/(long double)gTotalReadTransferTime.getTime();
-      gLogger->note(device, "Total read transfer time (RTT):  %17s\n", 
-                    gTotalReadTransferTime.getElapsedTimeStr().c_str());
-      gLogger->note(device, "Total read transfer rate (RTR):  %11.2Lf %-5s\n",
-                    readTransferRate, getTransferRateUnitsStr(gUnits));
-      gLogger->note(device, "Total read IOPS:                 %11.2Lf IOPS\n", readIops);
-   }
-}
-
-
-//////////////////////////  do_job()  /////////////////////////////////////////
-void do_job(Job *job, unsigned int iteration, IoDirection_t ioDirection)
-{
-   int ret;
-   capacity_t startingVerticalHacks = gDisplay->getCurrentNumVerticalHacks();
-   capacity_t startingHorizontalHacks = gDisplay->getCurrentNumHorizontalHacks();
-   capacity_t totalTransfers = job->getTotalNumberOfTransfers();
-   capacity_t transferSize = job->getTransferSize();
-   TimeHack savedTotalWriteTransferTime(gTotalWriteTransferTime);
-   TimeHack savedTotalReadTransferTime(gTotalReadTransferTime);
-
-   if (gProgress || gUseTui)
-   {
-      capacity_t transfersPerVerticalHack = (capacity_t)((double)totalTransfers/(double)startingVerticalHacks);
-      capacity_t verticalHacks = startingVerticalHacks;
-      if (transfersPerVerticalHack < 1LLU)
-      {
-         transfersPerVerticalHack = 1LLU;
-         verticalHacks = totalTransfers;
-      }
-
-      capacity_t transfersPerHorizontalHack = (capacity_t)((double)transfersPerVerticalHack/(double)startingHorizontalHacks);
-      capacity_t horizontalHacks = startingHorizontalHacks;
-      if (transfersPerHorizontalHack <= 1LLU)
-      {
-         transfersPerHorizontalHack = 1LLU;
-         if (transfersPerVerticalHack > startingHorizontalHacks)
-            horizontalHacks = startingHorizontalHacks;
-         else
-            horizontalHacks = transfersPerVerticalHack;
-      }
-         
-      capacity_t bufferSize = job->getBufferSize();
-      capacity_t remainingTransfers;
-
-      gDisplay->startJob(iteration, ioDirection);
-      ret = job->startJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-      }
-      for (capacity_t i = 1LLU; i <= verticalHacks - 1; i++)
-      {
-         // Run transfers for horizontal hacks.
-         job->startHack();
-         for (capacity_t j = 1LLU; j <= horizontalHacks - 1; j++)
-         {
-            ret = job->runTransfers(transfersPerHorizontalHack,
-                                    gContinueAfterError);
-            update_transfer_totals(job, ioDirection);
-            if (ret != EXIT_OK)
-            {
-               gFoundTransferErrors++;
-               gDisplay->errorHack();
-               if (gContinueAfterError)
-               {
-                  gLogger->logError("%s\n", 
-                                    job->getLastErrorMessage().c_str());
-               }
-               else
-               {
-                  end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-               }
-            }
-            else
-            {
-               gDisplay->hack();
-            }
-         }
-            
-         // Finish remaining transfers for last horizontal hack.
-         remainingTransfers = transfersPerVerticalHack - (transfersPerHorizontalHack * (horizontalHacks - 1));
-         ret = job->runTransfers(remainingTransfers, gContinueAfterError);
-         update_transfer_totals(job, ioDirection);
-         if (ret != EXIT_OK)
-         {
-            gFoundTransferErrors++;
-            gDisplay->errorEndHack();
-            if (gContinueAfterError)
-            {
-               gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-            }
-            else
-            {
-               gDisplay->nextHackRow();
-               end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-            }
-         }
-         else
-         {
-            gDisplay->endHack();
-         }
-         job->endHack();
-         for (capacity_t j = 0;
-              j < startingHorizontalHacks - horizontalHacks;
-              j++)
-         {
-            gDisplay->noHack();
-         }
-         intermediate_statistics(job, ioDirection);
-         gDisplay->nextHackRow();
-      }
-
-      // Finish transfers for last vertical hack leftovers.
-      remainingTransfers = (transferSize - job->getJobBytesTransferred())/bufferSize;
-      if (remainingTransfers > 0LLU)
-      {
-         job->startHack();
-         transfersPerHorizontalHack = (capacity_t)((double)remainingTransfers/(double)startingHorizontalHacks);
-         if (transfersPerHorizontalHack <= 1)
-         {
-            transfersPerHorizontalHack = 1LLU;
-            if (remainingTransfers > startingHorizontalHacks)
-               horizontalHacks = startingHorizontalHacks;
-            else
-               horizontalHacks = remainingTransfers;
-         }
-         for (capacity_t j = 1LLU; j <= horizontalHacks - 1; j++)
-         {
-            ret = job->runTransfers(transfersPerHorizontalHack,
-                                    gContinueAfterError);
-            update_transfer_totals(job, ioDirection);
-            if (ret != EXIT_OK)
-            {
-               gFoundTransferErrors++;
-               gDisplay->errorHack();
-               if (gContinueAfterError)
-               {
-                  gLogger->logError("%s\n", 
-                                    job->getLastErrorMessage().c_str());
-               }
-               else
-               {
-                  gDisplay->nextHackRow();
-                  end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-               }
-            }
-            else
-            {
-               gDisplay->hack();
-            }
-         }
-         ret = job->runTransfers(remainingTransfers - (transfersPerHorizontalHack * (horizontalHacks - 1)), gContinueAfterError);
-         update_transfer_totals(job, ioDirection);
-         if (ret != EXIT_OK)
-         {
-            gFoundTransferErrors++;
-            gDisplay->errorEndHack();
-            if (gContinueAfterError)
-            {
-               gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-            }
-            else
-            {
-               gDisplay->nextHackRow();
-               end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-            }
-         }
-         else
-         {
-            gDisplay->endHack();
-         }
-         job->endHack();
-         for (capacity_t j = 0; 
-              j < startingHorizontalHacks - horizontalHacks;
-              j++)
-         {
-            gDisplay->noHack();
-         }
-         intermediate_statistics(job, ioDirection);
-         gDisplay->nextHackRow();
-      }
-      ret = job->finishJob();
-      if (ret != EXIT_OK)
-      {
-         gLogger->showError("%s\n", job->getLastErrorMessage().c_str());
-         exit(ret);
-      }
-   }
-   else
-   {
-      gDisplay->startJob(iteration, ioDirection);
-      ret = job->startJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-         exit(ret);
-      }
-      ret = job->runTransfers(totalTransfers, gContinueAfterError);
-      update_transfer_totals(job, ioDirection);
-      if (ret != EXIT_OK)
-      {
-         gFoundTransferErrors++;
-         if (gContinueAfterError)
-         {
-            gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-         }
-         else
-         {
-            end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-         }
-      }
-      ret = job->finishJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-      }
-   }
-   // May get incremental time errors during transfers, so reset transfer 
-   // totals to old value plus total job time.
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalReadTransferTime = savedTotalReadTransferTime + job->getJobEndTime() - job->getJobStartTime();
-      break;
-   case WRITING:
-      gTotalWriteTransferTime = savedTotalWriteTransferTime + job->getJobEndTime() - job->getJobStartTime();
-      break;
-   }
-
-   // Update IOPS.
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalReadOps += job->getTotalNumberOfTransfers(); 
-      break;
-   case WRITING:
-      gTotalWriteOps += job->getTotalNumberOfTransfers(); 
-      break;
-   }
-
-   cumulative_statistics(job, iteration, ioDirection);
-   gDisplay->endJob();
-}
-
-
-//////////////////////////  run()  ////////////////////////////////////////////
-void run(operation_enum operation)
-{
-   int ret;
-
-   gCurrentIteration = 0;
-   do
-   {
-      gCurrentIteration++;
-      if (operation == OPERATION_WRITE || 
-          operation == OPERATION_READ_AFTER_WRITE)
-      {
-         Job *job = new WriteJob(*gLogger,
-                                 gFile,
-                                 gOffset,
-                                 gTransferSize,
-                                 gMinBufferSize,
-                                 gMaxBufferSize,
-                                 TransferInfoList::GEOMETRIC_PROGRESSION,
-                                 gPattern,
-                                 gUserPattern,
-                                 gFillMethod,
-                                 gIOMethod,
-                                 gSeed,
-                                 gJobId);
-         if (job == (Job *)NULL)
-         {
-            gLogger->showError("Could not allocate memory.");
-            exit(EXIT_ERROR_MEMORY_ALLOC);
-         }
-         if ((ret = job->init()) != EXIT_OK)
-         {
-            gLogger->showError("Could not initialize job.\n");
-            exit(ret);
-         }
-         
-         do_job(job, gCurrentIteration, WRITING);
-         delete job;
-         
-         if (gIterationsToDo == 0 || 
-             gCurrentIteration < gIterationsToDo ||
-             gCurrentIteration == gIterationsToDo && 
-             operation == OPERATION_READ_AFTER_WRITE)
-         {
-            gDisplay->nextJob();
-         }
-      }
-
-      if (operation == OPERATION_READ || 
-          operation == OPERATION_READ_AFTER_WRITE)
-      {
-         Job *job = new ReadJob(*gLogger,
-                                gFile,
-                                gOffset,
-                                gTransferSize,
-                                gMinBufferSize,
-                                gMaxBufferSize,
-                                TransferInfoList::GEOMETRIC_PROGRESSION,
-                                gPattern,
-                                gUserPattern,
-                                gFillMethod,
-                                gIOMethod,
-                                gSeed,
-                                gJobId);
-         if (job == (Job *)NULL)
-         {
-            gLogger->showError("Could not allocate memory.");
-            exit(EXIT_ERROR_MEMORY_ALLOC);
-         }
-         if ((ret = job->init()) != EXIT_OK)
-         {
-            gLogger->showError("Could not initialize job.\n");
-            exit(ret);
-         }
-
-         do_job(job, gCurrentIteration, READING);
-         delete job;
-
-         if (gIterationsToDo == 0 || gCurrentIteration < gIterationsToDo)
-         {
-            gDisplay->nextJob();
-         }
-      }
-
-   } while (gIterationsToDo == 0LLU || gCurrentIteration < gIterationsToDo);
-}
-
-
-//////////////////////////  main()  ///////////////////////////////////////////
-int main(int argc, char *argv[])
-{
-   int rtn;
-
-   // Process command-line options.
-   gPrgName = argv[0];
-   const char *prgBasename = basename(gPrgName);
-   string cmdArgs;
-   
-   for (int i = 1; PROG_NAME_LOOKUP[i] != (char *)NULL; i++)
-   {
-      if (strcmp(prgBasename, PROG_NAME_LOOKUP[i]) == 0)
-      {
-         gOperation = (operation_enum)i;
-         break;
-      }
-   }
-
-   if (!parse_options(argc, (const char **)argv, cmdArgs))
-   {
-      exit(EXIT_ERROR_USAGE);
-   }
-   if (!validate_options())
-      exit(EXIT_ERROR_USAGE);
-
-   if (gGetVersion)
-   {
-      version();
-      exit(0);
-   }
-
-   gLogger = new Log(gLogfilePath);
-   if (gLogger == (Log *)NULL)
-   {
-      end_program(EXIT_ERROR_MEMORY_ALLOC, "Out of memory.\n");
-   }
-   if ((rtn = gLogger->open()) != EXIT_OK)
-   {
-      end_program(rtn, "Could not open logfile \"%s\" -- %s\n",
-                  gLogfilePath.c_str(), strError(rtn).c_str());
-   }
-
-   signal(SIGQUIT, cleanup);
-   signal(SIGTERM, cleanup);
-   signal(SIGINT, cleanup);
-   signal(SIGWINCH, resize);
-
-   if (gUseTui)
-      gDisplay = new SpewTui(gIterationsToDo, gUnits, gProgress, gVerbosity);
-   else
-      gDisplay = new SpewConsole(gIterationsToDo, gUnits, gProgress, gVerbosity);
-
-   if (gDisplay == (SpewDisplay *)NULL)
-      end_program(EXIT_ERROR_MEMORY_ALLOC, "Out of memory.\n");
-   if ((rtn = gDisplay->init()) != EXIT_OK)
-      end_program(rtn, "Could not initialize display.\n");
-
-   gDisplay->setCurrentUnits(gUnits);
-   gProgramStartTime = TimeHack::getCurrentTime();
-   gLogger->logStart();
-   gLogger->logCmdLine(cmdArgs.c_str());
-   gLogger->logNote("\n");
-   gDisplay->startRun();
-
-   try 
-   {
-      run(gOperation);
-   } catch(...)
-   {
-      gLogger->showError("Caught exception\n");
-      exit(EXIT_ERROR_CAUGHT_EXCEPTION);
-   }
-   gDisplay->endRun();
-   end_program(EXIT_OK);
-
-   return 0;
-}
-
-
-

Copied: tags/1.0.8/src/spew.cpp (from rev 86, trunk/src/spew.cpp)



From apers at mail.berlios.de  Fri May 14 07:49:38 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:49:38 +0200
Subject: [Spew-changes] r91 - trunk
Message-ID: <201005140549.o4E5ncmX001614@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:49:37 +0200 (Fri, 14 May 2010)
New Revision: 91

Modified:
   trunk/NEWS
Log:
Updated NEWS file for 1.0.8 changes.


Modified: trunk/NEWS
===================================================================
--- trunk/NEWS	2010-05-14 05:42:39 UTC (rev 90)
+++ trunk/NEWS	2010-05-14 05:49:37 UTC (rev 91)
@@ -1,3 +1,11 @@
+Changes since 1.0.7
+
+* Fixed a build issue with Debian. The basename function is available on
+  new releases.
+
+* Fixed a problem with with reusing the same random seed for every 
+  iteration.  New seed is now used for every iteration.
+
 Changes since 1.0.6
 
 * Fixed a bug where the IOPS counter was not being reset between iterations 



From apers at mail.berlios.de  Fri May 14 07:56:03 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:56:03 +0200
Subject: [Spew-changes] r92 - tags
Message-ID: <201005140556.o4E5u3IB002355@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:56:02 +0200 (Fri, 14 May 2010)
New Revision: 92

Removed:
   tags/1.0.8/
Log:
Updating 1.0.8 tag.




From apers at mail.berlios.de  Fri May 14 07:56:49 2010
From: apers at mail.berlios.de (apers at BerliOS)
Date: Fri, 14 May 2010 07:56:49 +0200
Subject: [Spew-changes] r93 - in tags: . 1.0.8 1.0.8/man 1.0.8/src
Message-ID: <201005140556.o4E5unwG002423@sheep.berlios.de>

Author: apers
Date: 2010-05-14 07:56:48 +0200 (Fri, 14 May 2010)
New Revision: 93

Added:
   tags/1.0.8/
   tags/1.0.8/NEWS
   tags/1.0.8/builder.sh
   tags/1.0.8/configure.ac
   tags/1.0.8/man/spew.1.in
   tags/1.0.8/src/common.cpp
   tags/1.0.8/src/common.h
   tags/1.0.8/src/spew.cpp
Removed:
   tags/1.0.8/NEWS
   tags/1.0.8/builder.sh
   tags/1.0.8/configure.ac
   tags/1.0.8/man/spew.1.in
   tags/1.0.8/src/common.cpp
   tags/1.0.8/src/common.h
   tags/1.0.8/src/spew.cpp
Log:
Updated 1.0.8 tag.


Copied: tags/1.0.8 (from rev 80, trunk)

Deleted: tags/1.0.8/NEWS
===================================================================
--- trunk/NEWS	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/NEWS	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,102 +0,0 @@
-Changes since 1.0.6
-
-* Fixed a bug where the IOPS counter was not being reset between iterations 
-  resulting in IOPS increasing after every interation.
-
-* Fixed gcc 4.2 and 4.3 compile problems
-
-* Spew no longer truncates the file when using the -o|--offset option.
-
-Changes since 1.0.5
-
-* Ported to IA-64 HP-UX.
-
-* Joe Eiler contributed a patch that adds new patterns -- ones, zeros, alt, and
-user defined. These patterns are all variations of the zeros
-pattern, but instead 0's, 1's, 0xaa's, or any number between 0 and 255
-are used in the buffer.
-
-* Fixed build problems with GNU/kFreeBSD, which is Debian with a
-  FreeBSD kernel.
-
-* Fixed the following bugs:
-
-  Not all data integrity errors were being logged (They were still
-  being detected, just details were not included in the logfile).
-
-  When using the -c|continue-after-error option, all subsequent
-  transfers after the initial error were reported as errors when using
-  the -P|--progress option.
-
-  Offset into file for reported errors was added twice.
-
-  Data range for integrity errors was reported in the log twice.
-
-  Transfers with data integrity errors were not added to the total
-  data transferred, resulting in attempted reads past the end of file.
-
-Changes since 1.0.4
-
-* Fixed bug in calculating read IOPS.
-
-* Fixed double-counting bug when calculating intermediate statistics
-  (used with --progress option).
-
-Changes since 1.0.3
-
-* Renamed the executable "snarf" to "gorge" to prevent a naming conflict with 
-  the Snarf project (http://www.xach.com/snarf/).
-
-* Fixed various Debian packaging problems.
-
-* Command-line options can now be put in rcfiles.
-  Added an --rc-file option to specify a rcfile on the command-line.
-  Added an --no-rcfiles option to prevent the reading of standard rcfiles.
-
-* I/O's per second (IOPS) statistics are now output to the console and
-  to the logfile. 
-
-* Issue better error messages when command-line options are used incorrectly.
-
-* Fixed static builds for HP-UX 11.
-
-Changes since 1.0.2
-
-* Changed license from Hewlett-Packard proprietary to GPL.  Kudos to 
-  Hewlett-Packard for agreeing to open source this project.
-
-* Don't need to do an initial seek (with the --offset option), since offsets
-  are contained in each transfer.  This fixes a bug when writing to
-  tape drives where seeks are illegal.
-
-Changes since 1.0.1
-
-* Added an FAQ.
-
-* Alphabetically sorted options and parameters in usage and man-pages.
-
-* Added a PATTERNS section to the man-page.  This section will describe the 
-  the various algorithms used for the --pattern option.
-
-* Can now use the tebibytes(t) and terabytes(T) units for
-  the --min-block-size, --max-block-size, --offset options and the the
-  FILE_SIZE parameter.
-
-* I/O error messages are sent to the log file as well as the screen.
-
-* Read and write under-run are no longer treated as errors.  Under-runs
-  are now logged instead.
-
-
-Changes since 1.0.0
-
-* Fixed a segmentation fault when using random block sizes with the --progress
-  option.
-
-* Fixed a memory leak that occurs when --iterations is 0 or greater
-  than 1.
-
-* Updated the documentation.   
-
-
-

Copied: tags/1.0.8/NEWS (from rev 91, trunk/NEWS)

Deleted: tags/1.0.8/builder.sh
===================================================================
--- trunk/builder.sh	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/builder.sh	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,92 +0,0 @@
-#!/bin/sh
-
-if [ $# -lt 1 ]
-then
-cat >&2 <<EOF
-Usage: `basename $0` <arch>
-
-where <arch> is one of:
-
-   linux-ia32
-   linux-ia64
-   linux-parisc64
-   cygwinxp-ia32
-   hpux11-parisc64
-   hpux11-ia64
-
-EOF
-    exit 1
-fi
-
-arch=$1
-cxxflags=""
-ldflags=""
-configopts=--enable-static-link
-cxx=g++
-cc=gcc
-MAKE=make
-TAR=tar
-TAR_FLAGS=-cf
-TAR_EXT=tgz
-COMPRESS=gzip
-COMPRESS_FLAGS=-c
-
-case $arch in
-    linux-ia32)
-      libs="-ldl"
-      ;;
-    linux-ia64)
-      libs="-ldl"
-      ;;
-    linux-parisc64)
-      libs="-ldl"
-      ;;
-    cygwinxp-ia32)
-      TAR=zip
-      TAR_FLAGS=-r 
-      TAR_EXT=zip
-      ;;
-     hpux11-ia64)
-     cxx=g++
-     cc=gcc
-     MAKE=gmake
-     TAR=/usr/bin/tar
-     COMPRESS=/usr/local/bin/gzip
-     COMPRESS_FLAGS=-c
-     ldflags="-L /usr/local/lib/hpux32"
-     libs="-lncurses -lpopt -lintl -liconv"
-     cxxflags="-I/usr/local/include -I/usr/local/include/ncurses"
-     ;;
-    *)
-      echo "error: unknown architecture -- use one of linux-ia32, linux-ia64, linux-parisc64, cygwinxp-ia32, or hpux11-ia64" >&2
-      exit 1
-      ;;
-esac
-
-# Get version
-program_name=`sed -n -e 's/AM_INIT_AUTOMAKE(\(.*\),.*$/\1/p' configure.ac`
-age=`sed -n -e 's/.*SPEW_AGE=\([^:space:].*$\)/\1/p' configure.ac`
-revision=`sed -n -e 's/.*SPEW_REVISION=\([^:space:].*$\)/\1/p' configure.ac`
-current=`sed -n -e 's/.*SPEW_CURRENT=\([^:space:].*$\)/\1/p' configure.ac`
-
-distname="${program_name}-${age}.${revision}.${current}.${arch}"
-topdir=`pwd`
-builddir=${topdir}/${distname}
-installdir=${builddir}/usr/local
-tarfile=${distname}.tgz
-
-rm -f ${tarfile}
-rm -rf ${builddir}
-mkdir -p ${installdir}
-if [ -f  Makefile ]
-then
-  ${MAKE} distclean
-fi
-LIBS="$libs" CC=${cc} CXX=${cxx} CXXFLAGS="$cxxflags" LD=${ld} LDFLAGS="$ldflags" ./configure $configopts
-${MAKE} clean all
-${MAKE} install prefix=${installdir}
-
-( cd ${builddir} && ${TAR} ${TAR_FLAGS} - . | ${COMPRESS} ${COMPRESS_FLAGS} > ${topdir}/${distname}.${TAR_EXT} )
-
-rm -rf ${builddir}
-

Copied: tags/1.0.8/builder.sh (from rev 88, trunk/builder.sh)

Deleted: tags/1.0.8/configure.ac
===================================================================
--- trunk/configure.ac	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/configure.ac	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,111 +0,0 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
-AC_PREREQ(2.57)
-AC_INIT(src/spew.cpp)
-AC_CONFIG_AUX_DIR(config)
-AM_CONFIG_HEADER(config.h)
-AM_MAINTAINER_MODE
-
-SPEW_AGE=1
-SPEW_REVISION=0
-SPEW_CURRENT=7
-AC_SUBST(SPEW_AGE)
-AC_SUBST(SPEW_REVISION)
-AC_SUBST(SPEW_CURRENT)
-VERSION=$SPEW_AGE.$SPEW_REVISION.$SPEW_CURRENT
-
-AM_INIT_AUTOMAKE(spew, $VERSION)
-
-# Checks for programs.
-AC_PROG_CXX
-AC_PROG_CC
-AC_PROG_INSTALL
-AC_PROG_MAKE_SET
-AC_PROG_RANLIB
-AC_PROG_LN_S
-
-# Checks for libraries.
-AC_CHECK_LIB(popt, poptGetContext, ,AC_MSG_ERROR([PACKAGE] requires popt))
-AC_CHECK_LIB(ncurses, wresize, ,AC_MSG_ERROR([PACKAGE] requires ncurses))
-
-# Checks for header files.
-AC_HEADER_STDC
-AC_CHECK_HEADERS([fcntl.h stdint.h stdlib.h sys/time.h unistd.h paths.h])
-
-# Common defines
-AC_DEFINE(_GNU_SOURCE, 1, GNU extensions.)
-AC_DEFINE(_REENTRANT, 1, Use reentrant code if available.)
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_HEADER_STDBOOL
-AC_C_CONST
-AC_TYPE_OFF_T
-AC_TYPE_SIZE_T
-AC_HEADER_TIME
-AC_CHECK_DECL(O_DIRECT,AC_DEFINE(HAVE_DIRECT_IO,[1],Define to 1 if direct I/O is available.),,[#include <fcntl.h>])
-AC_CHECK_DECL(TIOCGWINSZ,AC_DEFINE(HAVE_WINSIZE_IOCTL,[1],Define to 1 if there is an ioctl to get the window size.),,[#include <sys/ioctl.h>])
-AC_CHECK_DECL(WIOCGETD,AC_DEFINE(HAVE_WINSIZE_IOCTL,[1],Define to 1 if there is an ioctl to get the window size.),,[#include <sys/ioctl.h>])
-AC_SYS_LARGEFILE
-
-# Functionality checks.
-AC_CHECK_DECL(MNT_MNTTAB,AC_DEFINE(MNTTAB_PATH,MNT_MNTTAB,Path to mtab/mnttab),,[#include <mntent.h>])
-AC_CHECK_DECL(_PATH_MOUNTED,AC_DEFINE(MNTTAB_PATH,_PATH_MOUNTED,Path to mnttab),,[#include <paths.h>])
-AC_CHECK_DECL(MNTTAB_PATH,mnttab=yes,mnttab=no,)
-if test "$mnttab" = yes; then
-AC_CHECK_FUNC([getmntent],AC_DEFINE(HAVE_MOUNT_CHECK,[1],Define to 1 if getmntent can be used to get mounted file systems.),,)
-fi
-
-# Get typedefs for 32 and 64 bit unsigned integers.
-AC_CHECK_SIZEOF(unsigned int)
-AC_CHECK_SIZEOF(unsigned long)
-AC_CHECK_SIZEOF(unsigned long long)
-if test "$ac_cv_sizeof_unsigned_int" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned int], Unsigned 4-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned long], Unsigned 4-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long_long" -eq 4; then
-  AC_DEFINE(UINT32_TYPE, [unsigned long long], Unsigned 4-byte integer)
-else
-  AC_MSG_ERROR([compiler has no 4-byte unsigned integer])
-fi
-if test "$ac_cv_sizeof_unsigned_int" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned int], Unsigned 8-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned long], Unsigned 8-byte integer)
-elif test "$ac_cv_sizeof_unsigned_long_long" -eq 8; then
-  AC_DEFINE(UINT64_TYPE, [unsigned long long], Unsigned 8-byte integer)
-else
-  AC_MSG_ERROR([compiler has no 8-byte unsigned integer])
-fi
-
-# Checks for library functions.
-AC_FUNC_MALLOC
-AC_TYPE_SIGNAL
-AC_FUNC_VPRINTF
-AC_CHECK_FUNCS([getpagesize gettimeofday memset strerror strsignal strrchr localtime_r])
-
-# Add --enable-static
-AC_ARG_ENABLE(static-link,
-	[  --enable-static-link         link spew statically],
-	[ case "$enableval" in
-          yes) static_spew=yes ;;
-          no) static_spew=no;;
-          esac
-        ],
-	static_spew=no)
-
-STATIC_LINK=""
-if test "x$static_spew" = "xyes" ; then
-  if test "x`uname`" = "xHP-UX" ; then
-    STATIC_LINK="-Wl,-a,archive_shared"
-  else
-    STATIC_LINK="-static"
-  fi
-fi
-AC_SUBST(STATIC_LINK)
-
-CXXFLAGS="$CXXFLAGS -DSYSCONFDIR=${sysconfdir}"
-
-AC_CONFIG_FILES([src/Makefile man/Makefile etc/Makefile])
-AC_OUTPUT(Makefile)

Copied: tags/1.0.8/configure.ac (from rev 87, trunk/configure.ac)

Deleted: tags/1.0.8/man/spew.1.in
===================================================================
--- trunk/man/spew.1.in	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/man/spew.1.in	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,320 +0,0 @@
-.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
-.TH SPEW "1" "May 2008" "spew 1.0.7" "User Commands"
-.SH NAME
-spew \- measures I/O performance and/or generates I/O load
-.SH SYNOPSIS
-.B spew
-\fI--write|--read|--read-after-write \fR[\fIOPTION\fR]... \fITRANSFER_SIZE\fR[\fIkKmMgG\fR] \fIFILE\fR
-.SH DESCRIPTION
-An I/O performance measurement and load generation tool. Writes and/or
-reads generated data to or from a character device, block device, or
-regular file.
-.TP
-\fB\-B\fR, \fB\-\-max\-buffer\-size\fR=\fIBUFFER_SIZE\fR
-Each read(2)/write(2) call uses a
-maximum buffer of size BUFFER_SIZE.
-.TP
-\fB\-b\fR, \fB\-\-min\-buffer\-size\fR=\fIBUFFER_SIZE\fR
-Each read(2)/write(2) call uses a
-minimum buffer of size BUFFER_SIZE.
-.TP
-\fB\-c\fR, \fB\-\-continue\-after\-error\fR
-Continue after data integrity errors.
-.TP
-\fB\-d\fR, \fB\-\-direct\fR
-Use direct I/O. Should only be used on
-block device files. Not all operating
-systems support direct I/O
-.TP
-\fB\-g\fR, \fB\-\-generate\-load\fR
-Equivalent to: \fB\-v\fR \fB\-t\fR \fB\-P\fR \fB\-p\fR random \fB\-i\fR 0.
-.TP
-\fB\-i\fR, \fB\-\-iterations\fR=\fICOUNT\fR
-Write/read data COUNT times. If count
-is 0, repeats forever.
-.TP
-\fB\-l\fR, \fB\-\-logfile\fR=\fILOGFILE\fR
-Send log messages to LOGFILE.
-.TP
-\fB\-\-no\-progress\fR
-Don't show progress (default).
-.TP
-\fB\-\-no\-rcfiles\fR
-Don't use standard rcfiles.
-.TP
-\fB\-q\fR, \fB\-\-no\-statistics\fR
-Don't output statistics.
-.TP
-\fB\-\-no\-tui\fR
-Don't use TUI interface.
-.TP
-\fB\-o\fR, \fB\-\-offset\fR=\fIOFFSET\fR
-Seek to OFFSET before starting I/O.
-.TP
-\fB\-P\fR, \fB\-\-progress\fR
-Show progress.
-.TP
-\fB\-p\fR, \fB\-\-pattern\fR=\fIPATTERN\fR
-Use data pattern PATTERN when reading
-or writing data.
-.TP
-\fB\-r\fR, \fB\-\-random\fR
-Read/Write buffers to random offsets.
-.TP
-\fB\-\-raw\fR
-An alias for \fB\-\-read\-after\-write\fR.
-.TP
-\fB\-\-rcfile\fR=\fIRCFILE\fR
-Read command\-line options from RCFILE.
-.TP
-\fB\-\-read\fR
-Read date from FILE.
-.TP
-\fB\-\-read\-after\-write\fR
-Read back data after writing to FILE.
-.TP
-\fB\-S\fR, \fB\-\-seed\fR=\fISEED\fR
-Use SEED for random number seed.
-.TP
-\fB\-s\fR, \fB\-\-sync\fR
-Use synchronous I/O.
-.TP
-\fB\-\-statistics\fR
-Output statistics (default).
-.TP
-\fB\-t\fR, \fB\-\-tui\fR
-Use curses\-based, terminal user
-interface.
-.TP
-\fB\-u\fR, \fB\-\-units\fR=\fIUNITS\fR
-Show transfer rate in UNITS units.
-.TP
-\fB\-\-usage\fR
-Show brief usage message and exit.
-.TP
-\fB\-V\fR, \fB\-\-version\fR
-Output version information and exit.
-.TP
-\fB\-v\fR, \fB\-\-detailed\-statistics\fR
-Output detailed statistics.
-.TP
-\fB\-\-write\fR
-Write data to FILE.
-.TP
-\-?, \fB\-\-help\fR
-Show this help and exit.
-.TP
-FILE
-Regular or device file to write data to.
-.TP
-LOGFILE
-Path to a file used for logging.
-.TP
-MAX_BUFFER_SIZE
-Minimum buffer size used in each
-read(2)/write(2) call (default is
-MIN_BUFFER_SIZE bytes).
-MAX_BUFFER_SIZE. Must be an even
-multiple of 512 bytes and can be
-specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-MAX_BUFFER_SIZE defaults to
-MIN_BUFFER_SIZE.  If MAX_BUFFER_SIZE >
-MIN_BUFFER_SIZE, random buffers sizes
-between the two limits are used.
-MAX_BUFFER_SIZE must be an even
-multiple of MIN_BUFFER_SIZE.
-.TP
-MIN_BUFFER_SIZE
-Minimum buffer size used in each
-read(2)/write(2) call (default is
-512 bytes).
-MIN_BUFFER_SIZE. Must be an even
-multiple of 512 bytes and can be
-specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.TP
-OFFSET
-Position to seek to in the file before
-starting I/O (default is 0). OFFSET
-must be an even multiple of 512 bytes
-and can be specified in bytes,
-kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.TP
-PATTERN
-Data pattern used when writing/reading
-data. Available patterns are: none,
-zeros, ones, alt, random, numbers, and "#"
-(where "#" is a number between 0\-255). The
-default pattern is "none".
-.TP
-RCFILE
-Read additional command\-line options
-from RCFILE.  Other options on the
-command\-line will override options in
-RCFILE.
-.TP
-SEED
-Used to seed the random number generator
-Must be >= 1 and <= 2^32.
-.TP
-TRANSFER_SIZE
-Total number of bytes to transfer (must
-be an even multiple of both
-MIN_BUFFER_SIZE and MAX_BUFFER)SIZE).
-TRANSFER_SIZE can be specified in
-bytes, kilobytes, megabytes, or
-gigabytes.
-.TP
-UNITS
-Kibibytes(k), kilobytes(K),
-mebibytes(m), megabytes(M),
-gibibytes(g), gigabytes(G).
-tebibytes(t), or terabytes(T).
-.SH EXAMPLES
-\fBspew --write -b 16k 1m /tmp/bigfile\fR
-.PP
-or
-.PP
-\fBspew -b 16k 1m /tmp/bigfile\fR
-.PP
-Writes 1 mebibyte (1 mebibyte = 1024*1024 bytes) using 16 kibibytes (1
-kibibyte = 1024 bytes) requests to the file \fI/tmp/bigfile\fR using
-the default pattern (random).
-.
-Displays the write transfer rate in kibibytes per second and the write
-transfer time in seconds.
-.
-.PP
-\fBspew --write -u m -i 10 -b 1k 256k /dev/sda1\fR
-.PP
-or
-.PP
-\fBspew -u m -i 10 -b 1k 256k /dev/sda1\fR
-.PP
-Writes 256 kibibytes using 1 kibibyte requests to the block device file
-\fI/dev/sda1\fR 10 times using the default pattern (random).
-.
-The iteration and cumulative write transfer rates are displayed in
-mebibytes per second and the iteration and cumulative write transfer times are
-displayed in seconds.
-.PP
-\fBspew --raw -d -o 1m -b 16m 1g /tmp/bigfile\fR
-.PP
-or
-.PP
-\fBregorge -s -o 1m -b 16m 1g /tmp/bigfile\fR
-.PP
-Write 1 gibibyte (1 gibibyte = 1024*1024*1024 bytes) starting at an
-offset of 1 mebibyte using 16 mebibyte requests to the file
-\fI/tmp/bigfile\fR using the default pattern (random).
-. 
-The data is written synchronously and flushed at file close.
-.
-Then read in the same data using the same request size and offset.
-.
-The data is checked to ensure that the data read in matches the data
-read out.
-.
-Write and read tranfer rates are displayed in kibibytes/second.  Read
-are write transfer times are displayed in seconds.
-.PP
-\fBspew --read -i 0 -u M -p zeros -b 512 1m /dev/zero\fR
-.PP
-or
-.PP
-\fBgorge -i 0 -u M -p zeros -b 512 1m /dev/zero\fR
-.PP
-Read 1 mebibyte of data using 512 byte requests from the file
-\fI/dev/zero\fR an infinite number of times using the zeros pattern
-(don't check the data).
-.
-The iteration and cumulative read transfer rates are displayed in
-megabytes (1 megabyte = 1,000,000 bytes) per second and the iteration
-and cumulative read transfer times are displayed in seconds.
-.PP
-\fBspew --raw -g -r -b 1k -B 256K 1t /dev/md1\fR
-.PP
-or
-.PP
-\fBregorge -g -r -b 1k -B 256K 1t /dev/md1\fR
-.PP
-Write 1 tebibyte (1 tebibyte = 1024*1024*1024*1024 bytes) using 1-256
-kibibyte requests to the block device \fI/dev/md1\fR using the random
-pattern.  Random seeks are performed before each transfer, but each
-block between the start and end of the data is written exactly once.
-.
-The request sizes are chosen randomly.
-. 
-Then read in the same data using the same request sizes and seeks in
-the same sequence.
-.
-Repeat the above sequence an infinite number of times until told to
-quit (via signal or TUI command).
-.PP
-The data is checked to ensure that the data read in matches the data
-read out.
-.
-A curses-based TUI is used to display iteration and cumulative transfer
-rates, transfer times, and bytes transferred.
-.
-Display verbose statistics after quitting.
-.
-.SH ALGORITHMS
-.
-The following algorithm is used to determine blocksize when
-MAX_BUFFER_SIZE > MIN_BUFFER_SIZE:
-.PP
-Find the largest blocksize that is a power of 2 and is >=
-MAX_BUFFER_SIZE.
-.
-Call this maxbuffersize. Find the smallest buffersize that is a power
-of 2 and is >= MIN_BUFFER_SIZE. Call this minbuffersize.
-.
-Chunksize = maxbuffersize * (difference in number of bits between min
-and maxbuffersize + 1).
-.
-The number of chunks is TRANSFER_SIZE/chunksize. Call this numchunks.
-.
-There will be numchunks number of read/writes that are of size
-maxbuffersize, 2 * numchunks number of read/writes that are of size
-maxbuffersize/2, 4 * numchunks number of read/writes that are of size
-maxbuffersize/4, and so on until minbuffersize is reached.
-.
-MIN_BUFFER_SIZE is used for any remaining transfers if TRANSFER_SIZE
-is not evenly divisible by chunksize.
-.PP
-Example: Using a MIN_BLOCK_SIZE of 1k, a MAX_BLOCK_SIZE of 8k and a
-TRANSFER_SIZE of 264k results in 8 8k read/writes, 16 4k read/write,
-32 2k read/writes, and 64 + 8 1k read/writes.
-.SH PATTERNS
-.
-Use the following od(1) command to examine spew generated files where a data
-integrity problem has occurred:
-.PP
-od -A d --format=d8 --width=32  <file>
-.PP
-.SH FILES
-.TP
-\fl$HOME/.spewrc\fR or \fl$SPEWRC\fR
-Holds user default options. These options precede any options included
-on the command-line.
-.TP
-\flSYSCONFDIR/spew.conf\fR
-Holds system-wide default options.  These options precede any options
-included on the command-line  and options included from \fl$HOME/.spewrc\fR or \fl$SPEWRC\fR.
-.SH AUTHOR
-Written by Andrew Patterson <andrew.patterson at hp.com>
-.SH "REPORTING BUGS"
-Report bugs to Andrew Patterson <andrew.patterson at hp.com>.
-.PP
-Copyright 2007 Hewlett\-Packard Corp.

Copied: tags/1.0.8/man/spew.1.in (from rev 87, trunk/man/spew.1.in)

Deleted: tags/1.0.8/src/common.cpp
===================================================================
--- trunk/src/common.cpp	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/common.cpp	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,191 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// common.cpp
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-namespace std {} using namespace std;
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include <stdio.h>
-#include <stdarg.h>
-#include <unistd.h>
-#include <math.h>
-#include <mntent.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <cstring>
-#ifdef HAVE_PATHS_H
-#include <paths.h>
-#endif
-
-#include "common.h"
-
-static const char *TRANSFER_RATE_UNITS_STR_LOOKUP[] = 
-{
-   "KiB/s",
-   "KB/s",
-   "MiB/s",
-   "MB/s",
-   "GiB/s",
-   "GB/s",
-   "TiB/s",
-   "TB/s",
-   (char *)NULL,
-};
-
-
-static capacity_t TRANSFER_RATE_UNITS_CONV_LOOKUP[] = 
-{
-   1024ULL,
-   1000ULL,
-   1024ULL * 1024ULL,
-   1000ULL * 1000ULL,
-   1024ULL * 1024ULL * 1024ULL,
-   1000ULL * 1000ULL * 1000ULL,
-   1024ULL * 1024ULL * 1024ULL * 1024ULL,
-   1000ULL * 1000ULL * 1000ULL * 1000ULL,
-};
-
-
-static const size_t MAX_SPRINTF_CHARS = 2048;
-static const size_t MAX_STR_CHARS = 1024;
-
-
-/////////////////////////  basename()  ///////////////////////////////////////
-const char *basename(char *path)
-{
-   char *name = strrchr(path, '/');
-   if (name == NULL)
-      return path;
-   else
-      return name + 1;
-}
-
-
-#ifdef HAVE_MOUNT_CHECK
-/////////////////////////  is_mounted()  /////////////////////////////////////
-bool is_mounted(const char *path)
-{
-   struct stat statbuf;
-   dev_t path_rdev;
-
-   if (stat(path, &statbuf) < 0)
-      return false;
-
-   if (!S_ISBLK(statbuf.st_mode))
-      return false;
-   path_rdev = statbuf.st_rdev;
-
-   FILE *mtabfile;
-   struct mntent *ent;
-
-   mtabfile = setmntent(MNTTAB_PATH, "r");
-   while ((ent = getmntent(mtabfile)) != (struct mntent *)NULL)
-   {
-      if (stat(ent->mnt_fsname, &statbuf) < 0)
-         continue;
-      if (path_rdev == statbuf.st_rdev)
-      {
-         return true;
-      }
-   }
-   endmntent(mtabfile);
-   
-   return false;
-}
-#endif // HAVE_MOUNT_CHECK
-
-
-///////////////////////  strPrintf()  /////////////////////////////////////////
-string strPrintf(const char *fmt, ...)
-{
-   char *tmpStr = new char[MAX_SPRINTF_CHARS + 1];
-
-   va_list ap;
-   va_start(ap, fmt);
-   vsnprintf(tmpStr, MAX_SPRINTF_CHARS, fmt, ap);
-   va_end(ap);
-
-   string returnString = tmpStr;
-   delete[] tmpStr;
-   return returnString;
-}
-
-
-///////////////////////  strSignal()  /////////////////////////////////////////
-string strSignal(int sig)
-{
-#ifdef HAVE_STRSIGNAL
-   return string(strsignal(sig));
-#else
-   return strPrintf("signal %d", sig); 
-#endif
-}
-
-
-///////////////////////  strError()  //////////////////////////////////////////
-string strError(int error_number)
-{
-#ifdef HAVE_STRERROR
-   return string(strerror(error_number));
-#else
-   return strPrintf("errno %d", error_number);  
-#endif
-}
-
-
-//////////////////////////  ConvertUnits()  ////////////////////////////////
-long double convertCapacity(long double bytes, Units_t units)
-{
-   return bytes/(long double)TRANSFER_RATE_UNITS_CONV_LOOKUP[units];
-}
-
-
-////////////////  getTransferRateUnitStr()  ///////////////////////////////////
-const char *getTransferRateUnitsStr(Units_t units)
-{
-   return TRANSFER_RATE_UNITS_STR_LOOKUP[units];
-}
-
-
-////////////////////////  localTime()  ////////////////////////////////////////
-//
-// Encapsulate thread-safe/non-thread safe versions of localtime.  Note that
-// this function is not thread-safe unless localtime_r is actually available 
-// (which means using pthreads on some platforms, e.g., HP-UX).
-//
-void localTime(const time_t *timep, struct tm *result)
-{
-   time_t currentTime;
-   struct tm currentBrokenDownTime;
-   struct tm *currentBrokenDownTimePtr;
-   
-   time(&currentTime);
-#ifdef HAVE_LOCALTIME_R
-   currentBrokenDownTimePtr = localtime_r(&currentTime, 
-                                          &currentBrokenDownTime);
-#else
-   currentBrokenDownTimePtr = localtime_r(&currentTime);
-#endif
-   memcpy(result, currentBrokenDownTimePtr, sizeof(struct tm));
-}

Copied: tags/1.0.8/src/common.cpp (from rev 84, trunk/src/common.cpp)

Deleted: tags/1.0.8/src/common.h
===================================================================
--- trunk/src/common.h	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/common.h	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,120 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// common.h
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-#ifndef COMMON_H
-#define COMMON_H
-
-#include <time.h>
-#include <sys/time.h>
-#include <string>
-#include <stdlib.h>
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Macros  /////////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-#define ROUND_UP_OFFSET(X, M) ((M) - 1 - (((X) + (M) - 1) % (M)))
-#define PTR_ALIGN(Ptr, M) ((Ptr) \
-                           + ROUND_UP_OFFSET ((char *)(Ptr) - (char *)0, (M)))
-
-#ifndef max
-#define max(X,Y) ((X) >= (Y) ? (X) : (Y))
-#endif
-
-#define STRINGIFY(s) #s
-#define QUOTE(s) STRINGIFY(s)
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Typedefs  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-
-typedef enum 
-{
-   VERBOSITY_NONE, 
-   VERBOSITY_SHORT, 
-   VERBOSITY_LONG,
-} Verbosity_t;
-
-typedef enum
-{
-   EXIT_OK = 0,
-   EXIT_ERROR_USAGE,
-   EXIT_ERROR_INVALID_USAGE,
-   EXIT_ERROR_PERM,
-   EXIT_ERROR_SYSTEM,
-   EXIT_ERROR_ILLEGAL_OPERATION,
-   EXIT_ERROR_CAUGHT_EXCEPTION,
-   EXIT_ERROR_DATA_INTEGRITY,
-   EXIT_ERROR_MEMORY_ALLOC,
-   EXIT_ERROR_UNDERRUN,
-   EXIT_ERROR_IO,
-   EXIT_ERROR_SCREEN_SIZE,
-} ExitCode_t;
-
-typedef enum 
-{
-   KIBIBYTES,
-   KILOBYTES,
-   MEBIBYTES,
-   MEGABYTES,
-   GIBIBYTES,
-   GIGABYTES,
-   TEBIBYTES,
-   TERABYTES,
-} Units_t;
-
-typedef enum
-{
-   READING,
-   WRITING,
-} IoDirection_t;
-
-typedef UINT32_TYPE u32_t;
-typedef UINT64_TYPE u64_t;
-typedef unsigned long long capacity_t;
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Constants  //////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-#ifdef __CYGWIN__
-static const unsigned int DEFAULT_SCREEN_ROWS = 25;
-static const unsigned int DEFAULT_SCREEN_COLUMNS = 79;
-#else
-static const unsigned int DEFAULT_SCREEN_ROWS = 24;
-static const unsigned int DEFAULT_SCREEN_COLUMNS = 80;
-#endif
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Functions  //////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-const char *basename(char *path);
-string strPrintf(const char *fmt, ...);
-string strSignal(int sig);
-string strError(int error_number);
-bool is_mounted(const char *path);
-long double convertCapacity(long double bytes, Units_t units);
-const char *getTransferRateUnitsStr(Units_t units);
-void localTime(const time_t *timep, struct tm *result);
-
-#endif // COMMON_H

Copied: tags/1.0.8/src/common.h (from rev 84, trunk/src/common.h)

Deleted: tags/1.0.8/src/spew.cpp
===================================================================
--- trunk/src/spew.cpp	2008-05-13 04:35:01 UTC (rev 80)
+++ tags/1.0.8/src/spew.cpp	2010-05-14 05:56:48 UTC (rev 93)
@@ -1,1527 +0,0 @@
-//////////////////////////  -*-C++-*- /////////////////////////////////////////
-//
-// spew.cpp
-//
-// Spew
-//
-// Copyright (C) 2004 Hewlett-Packard Corp.
-//
-//
-// This program is free software; you can redistribute it and/or modify it
-// under the terms of the GNU General Public License as published by the
-// Free Software Foundation version 2 of the License.
-// 
-// This program is distributed in the hope that it will be useful, but
-// WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-// General Public License for more details.
-// 
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 675 Mass Ave, Cambridge, MA 02139, USA.
-
-namespace std {} using namespace std;
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include <string.h>
-#include <stdlib.h>
-#include <stdarg.h>
-#include <stdio.h>
-#include <unistd.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <sys/time.h>
-#include <fcntl.h>
-#include <errno.h>
-#include <errno.h>
-#include <ctype.h>
-#include <iostream>
-#include <string>
-#include <vector>
-#include <list>
-#include <iterator>
-#include <string>
-#include <popt.h>
-#include <signal.h>
-
-#include "common.h"
-#include "Log.h"
-#include "Job.h"
-#include "WriteJob.h"
-#include "ReadJob.h"
-#include "Random.h"
-#include "SpewDisplay.h"
-#include "SpewConsole.h"
-#include "SpewTui.h"
-#include "TransferInfoList.h"
-
-
-//////////////////////////////////////////////////////////////////////////////
-///////////////////////////  Typedefs  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-enum operation_enum {OPERATION_NONE,
-                     OPERATION_WRITE,
-                     OPERATION_READ, 
-                     OPERATION_READ_AFTER_WRITE};
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////////  Constants  ///////////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-static const char CANONICAL_PROG_NAME[] = "spew";
-static const char *PROG_NAME_LOOKUP[] =
-{
-   (char *)NULL,
-   "spew",
-   "gorge",
-   "regorge",
-   (char *)NULL,
-
-};
-static const char SPEWRC_ENV[] = "SPEWRC";
-static const char DEFAULT_SPEWRC_FILENAME[] = ".spewrc";
-static const char SYSTEM_SPEWRC_FILENAME[] = "spew.conf";
-static const char PROG_VERSION[] = VERSION;
-static const int MAX_TMP_STR_LEN = 1024;
-static const unsigned int INDENT_SIZE = 4;
-static const char INDENT_CHAR = ' ';
-
-static const Units_t DEFAULT_UNITS = KIBIBYTES;
-static const capacity_t DEFAULT_MIN_BUFFER_SIZE = Transfer::BUFFER_SIZE_INCREMENT;
-static const capacity_t DEFAULT_MAX_BUFFER_SIZE = DEFAULT_MIN_BUFFER_SIZE;
-static unsigned int DEFAULT_ITERATIONS = 1;
-
-static const u32_t DEFAULT_SEED = 0;
-static const TransferInfoList::fill_method_t DEFAULT_FILL_METHOD = TransferInfoList::SEQUENTIAL_FILL;
-static const Job::io_method_t DEFAULT_IO_METHOD = Job::ASYNCH_IO;
-static const Job::pattern_t DEFAULT_PATTERN = Job::PATTERN_NONE;
-static const char *PATTERN_LOOKUP[] = 
-{
-   "none",
-   "zeros",
-   "ones",
-   "alt",
-   "numbers",
-   "random",
-   "#",
-   (char *)NULL,
-};
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////////  Global Variables  ////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-char *gPrgName = NULL;
-operation_enum gOperation;
-int gGetVersion = 0;
-Verbosity_t gVerbosity = VERBOSITY_SHORT;
-Job::io_method_t gIOMethod = DEFAULT_IO_METHOD;
-TransferInfoList::fill_method_t gFillMethod = DEFAULT_FILL_METHOD;
-Units_t gUnits = DEFAULT_UNITS;
-bool gProgress = false;
-int gIterationsToDo = 1;
-int gContinueAfterError = 0;
-u32_t gSeed = 0;
-capacity_t gMinBufferSize = DEFAULT_MIN_BUFFER_SIZE;
-capacity_t gMaxBufferSize = DEFAULT_MAX_BUFFER_SIZE;
-capacity_t gOffset = 0;
-Job::pattern_t gPattern = DEFAULT_PATTERN;
-unsigned char gUserPattern = 0;
-capacity_t gTransferSize = 0;
-string gFile = "";
-bool gUseTui = false;
-string gLogfilePath = "";
-bool gUseStdRcFiles = true;
-Log *gLogger = (Log *)NULL;
-capacity_t gJobId = 0;
-SpewDisplay *gDisplay = (SpewDisplay *)NULL; 
-unsigned int gCurrentIteration = 0;
-TimeHack gTotalReadTransferTime;
-TimeHack gTotalWriteTransferTime;
-capacity_t gTotalBytesRead = 0;
-capacity_t gTotalBytesWritten = 0;
-capacity_t gTotalWriteOps = 0;
-capacity_t gTotalReadOps = 0;
-TimeHack gProgramStartTime;
-unsigned int gFoundTransferErrors = 0;
-
-//////////////////////////////////////////////////////////////////////////////
-////////////////////  Function Prototypes  ///////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-void error_msg(const char *fmt, ...);
-void note(const char *fmt, ...);
-void usage();
-bool parse_options(int argc, const char **argv, string& cmdArgs);
-bool validate_options();
-void end_program(int exitCode);
-void end_program(int exitCode, const char *fmt, ...);
-void update_transfer_totals(const Job *job,
-                            IoDirection_t ioDirection);
-void run_statistics(unsigned int iterations);
-
-
-//////////////////////////////////////////////////////////////////////////////
-//////////////////////  Function Definitions  ////////////////////////////////
-//////////////////////////////////////////////////////////////////////////////
-
-////////////////////////  error_msg()  ///////////////////////////////////////
-void error_msg(const char *fmt, ...)
-{
-   fprintf(stderr, "%s: ", gPrgName);
-   va_list ap;
-   va_start(ap, fmt);
-   vfprintf(stderr, fmt, ap);
-   va_end(ap);
-   fflush(stderr);
-}
-
-
-/////////////////////////  note()  ///////////////////////////////////////////
-void note(const char *fmt, ...)
-{
-   va_list ap;
-   va_start(ap, fmt);
-   vfprintf(stdout, fmt, ap);
-   va_end(ap);
-   fflush(stdout);
-}
-
-
-//////////////////////////  version()  ///////////////////////////////////////
-void version()
-{
-   note("%s %s\n", CANONICAL_PROG_NAME, PROG_VERSION);
-   note("Copyright 2007 Hewlett-Packard Corp.\n");
-   note("Written by Andrew Patterson <andrew.patterson at hp.com>\n");
-}
-
-
-//////////////////////////  help()  //////////////////////////////////////////
-void help(poptContext &context)
-{
-   poptSetOtherOptionHelp(context, "--write|--read|--read-after-write [OPTION]... TRANSFER_SIZE[kKmMgG] FILE\n"
-"An I/O performance measurement and load generation tool. Writes and/or \n"
-"reads generated data to or from a character device, block device, or \n"
-"regular file.\n");
-
-   poptPrintHelp(context, stdout, 0);
-
-   char fmtStr[] = 
-"\n"
-"  FILE                              Regular or device file to write data to.\n"
-"  LOGFILE                           Path to a file used for logging.\n"
-"  MAX_BUFFER_SIZE                   Minimum buffer size used in each \n"
-"                                    read(2)/write(2) call (default is\n"
-"                                    MIN_BUFFER_SIZE bytes).\n"
-"                                    MAX_BUFFER_SIZE. Must be an even\n"
-"                                    multiple of %llu bytes and can be\n"
-"                                    specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"                                    MAX_BUFFER_SIZE defaults to \n"
-"                                    MIN_BUFFER_SIZE.  If MAX_BUFFER_SIZE >\n"
-"                                    MIN_BUFFER_SIZE, random buffers sizes\n"
-"                                    between the two limits are used.\n"
-"                                    MAX_BUFFER_SIZE must be an even\n"
-"                                    multiple of MIN_BUFFER_SIZE.\n"
-"  MIN_BUFFER_SIZE                   Minimum buffer size used in each \n"
-"                                    read(2)/write(2) call (default is\n"
-"                                    %llu bytes).\n"
-"                                    MIN_BUFFER_SIZE. Must be an even\n"
-"                                    multiple of %llu bytes and can be\n"
-"                                    specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"  OFFSET                            Position to seek to in the file before\n"
-"                                    starting I/O (default is 0). OFFSET\n"
-"                                    must be an even multiple of %llu bytes\n"
-"                                    and can be specified in bytes,\n"
-"                                    kibibytes(k), kilobytes(K),\n"
-"                                    mebibytes(m), megabytes(M),\n"
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-"  PATTERN                           Data pattern used when writing/reading\n"
-"                                    data. Available patterns are: %s, \n"
-"                                    %s, %s, %s, %s, %s, and \"%s\"\n"
-"                                    (where \"%s\" is a number between 0-255). The\n"
-"                                    default pattern is \"%s\".\n"
-"  RCFILE                            Read additional command-line options\n"
-"                                    from RCFILE.  Other options on the\n"
-"                                    command-line will override options in\n"
-"                                    RCFILE.\n"
-"  SEED                              Used to seed the random number generator\n"
-"                                    Must be >= 1 and <= 2^32.\n"
-"  TRANSFER_SIZE                     Total number of bytes to transfer (must\n"
-"                                    be an even multiple of both\n"
-"                                    MIN_BUFFER_SIZE and MAX_BUFFER)SIZE).\n"
-"                                    TRANSFER_SIZE can be specified in\n" 
-"                                    bytes, kilobytes, megabytes, or \n"
-"                                    gigabytes.\n"
-"  UNITS                             Kibibytes(k), kilobytes(K), \n"
-"                                    mebibytes(m), megabytes(M),\n" 
-"                                    gibibytes(g), gigabytes(G).\n"
-"                                    tebibytes(t), or terabytes(T).\n"
-      "";
-
-   char outStr[4096];
-   snprintf(outStr, sizeof(outStr) - 1, fmtStr,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::BUFFER_SIZE_INCREMENT,
-            Transfer::OFFSET_INCREMENT,
-            PATTERN_LOOKUP[Job::PATTERN_NONE],
-            PATTERN_LOOKUP[Job::PATTERN_ZEROS],
-            PATTERN_LOOKUP[Job::PATTERN_ONES],
-            PATTERN_LOOKUP[Job::PATTERN_ALTERNATING],
-            PATTERN_LOOKUP[Job::PATTERN_RANDOM],
-            PATTERN_LOOKUP[Job::PATTERN_TRANSFER_NUMBERS],
-            PATTERN_LOOKUP[Job::PATTERN_USER_DEFINED],
-            PATTERN_LOOKUP[Job::PATTERN_USER_DEFINED],
-            PATTERN_LOOKUP[DEFAULT_PATTERN]);
-   fprintf(stdout, outStr);
-
-   fprintf(stdout, "\nReport bugs to Andrew Patterson <andrew.patterson at hp.com>.\n");
-}
-
-
-//////////////////////////  usage()  /////////////////////////////////////////
-void usage(poptContext &context)
-{
-   poptSetOtherOptionHelp(context, "TRANSFER_SIZE[kKmMgG] FILE");
-   poptPrintUsage(context, stdout, 0);
-}
-
-
-//////////////////////////  get_size()  //////////////////////////////////////
-capacity_t get_size(const char *arg)
-{
-   char units;
-   capacity_t size;
-
-   if (sscanf(arg, "%llu%c", &size, &units) == 2)
-   {
-      switch (units)
-      {
-      case 'k':
-      case 'K':
-         size *= 1024LL;
-         break;
-      case 'm':
-      case 'M':
-         size *= 1024LL * 1024LL;
-         break;
-      case 'g':
-      case 'G':
-         size *= 1024LL * 1024LL * 1024LL;
-         break;
-      case 't':
-      case 'T':
-         size *= 1024LL * 1024LL * 1024LL * 102;
-         break;
-      default:
-         error_msg("Invalid unit in argument \"%s\"\n", arg);
-         exit(EXIT_ERROR_USAGE);
-         break;
-      }
-   }
-   else if (sscanf(arg, "%llu", &size) != 1)
-   {
-      error_msg("Could not parse size for argument \"%s\".\n", arg);
-      exit(EXIT_ERROR_USAGE);
-   }
-   return size;
-}
-
-
-//////////////////////////  get_units()  //////////////////////////////////////
-Units_t get_units(const char *arg)
-{
-   char unitsCh;
-   Units_t units;
-
-   if (sscanf(arg, "%c", &unitsCh) == 1)
-   {
-      switch (unitsCh)
-      {
-      case 'k':
-         units = KIBIBYTES;
-         break;
-      case 'K':
-         units = KILOBYTES;
-         break;
-      case 'm':
-         units = MEBIBYTES;
-         break;
-      case 'M':
-         units = MEGABYTES;
-         break;
-      case 'g':
-         units = GIBIBYTES;
-         break;
-      case 'G':
-         units = GIGABYTES;
-         break;
-      case 't':
-         units = TEBIBYTES;
-         break;
-      case 'T':
-         units = TERABYTES;
-         break;
-      default:
-         error_msg("Invalid unit in argument \"%s\" - use kKmMgG.\n", arg);
-         exit(EXIT_ERROR_USAGE);
-         break;
-      }
-   }
-   else
-   {
-      error_msg("Could not parse units in argument \"%s\"\n", arg);
-      exit(EXIT_ERROR_USAGE);
-   }
-   return units;
-}
-
-
-//////////////////////////  parse_rcfile()  ///////////////////////////////////
-bool parse_rcfile(FILE *rcfile,
-                  string& cmdArgs)
-{
-   char rcArgs[MAX_TMP_STR_LEN];
-   int len;
-   while (fgets(rcArgs, MAX_TMP_STR_LEN, rcfile) != (char *)NULL)
-   {
-      // Chop off string after comment character.
-      char *commentStart = strchr(rcArgs, '#');
-      if (commentStart)
-         *commentStart = '\0';
-      len = strlen(rcArgs);
-      if (rcArgs[len - 1] == '\n')
-         rcArgs[len - 1] = '\0';
-      if (rcArgs[0] != '\0')
-      {
-         cmdArgs += rcArgs;
-         cmdArgs += " ";
-      }
-   }
-   return true;
-}
-
-
-//////////////////////////  read_rcfiles()  ///////////////////////////////////
-bool read_rcfiles(int argc, const char **argv, string& cmdArgs)
-{
-   struct stat statbuf;
-   string rcFilePath;
-   vector<string> rcFilePaths;
-
-
-   // Check command-line for --no-rcfiles option.
-   for (int i = 0; i < argc; i++)
-   {
-      if (strncmp(argv[i], "--no-rcfiles", strlen("--no-rcfiles")) == 0)
-      {
-         gUseStdRcFiles = false;
-         break;
-      }
-   }
-
-   // Read standard config locations.
-   if (gUseStdRcFiles)
-   {
-      // Read system-wide rcfile if it exists.
-      rcFilePath = QUOTE(SYSCONFDIR);
-      rcFilePath += "/";
-      rcFilePath += SYSTEM_SPEWRC_FILENAME;
-      if (stat(rcFilePath.c_str(), &statbuf) >= 0)
-      {
-         rcFilePaths.push_back(rcFilePath);
-      }
-      else
-      {
-         if (errno != ENOENT)
-         {
-            error_msg("Cannot access rc file \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-         }
-      }
-
-      rcFilePath = "";
-      if (getenv(SPEWRC_ENV))
-      {
-         rcFilePath = getenv(SPEWRC_ENV);
-      }
-      else
-      {
-         char *home = getenv("HOME");
-         if (home)
-         {
-            rcFilePath = home;
-            rcFilePath += "/";
-            rcFilePath += DEFAULT_SPEWRC_FILENAME;
-         }
-      }
-      if (stat(rcFilePath.c_str(), &statbuf) >= 0)
-      {
-         rcFilePaths.push_back(rcFilePath);
-      }
-      else
-      {
-         if (errno != ENOENT)
-         {
-            error_msg("Cannot access rc file \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-         }
-      }
-   }
-
-   // Check the command-line for --rcfile.
-   for (int i = 1; i < argc; i++)
-   {
-      rcFilePath = "";
-      if (strncmp(argv[i], "--rcfile", 8) == 0)
-      {
-         const char *eqPos = strrchr(argv[i], '=');
-         if (eqPos == (char *)NULL)
-         {
-            if (i + 1 < argc)
-            {
-               rcFilePath = argv[i+1];
-            }
-            else
-            {
-               error_msg("Missing RCFILE argument.\n");
-               return false;
-            }
-         }
-         else
-         {
-            rcFilePath = eqPos + 1;
-         }
-         if (stat(rcFilePath.c_str(), &statbuf) < 0)
-         {
-            error_msg("Cannot access RCFILE \"%s\" -- %s.\n", 
-                      rcFilePath.c_str(), strError(errno).c_str());
-            return false;
-         }
-         else
-            rcFilePaths.push_back(rcFilePath);
-         break;
-      }
-   }
-
-   vector<string>::iterator pathIter;
-   for (pathIter = rcFilePaths.begin();
-        pathIter != rcFilePaths.end();
-        pathIter++)
-   {
-      FILE *rcfile = fopen(pathIter->c_str(), "r");
-      if (rcfile == (FILE *)NULL)
-      {
-         error_msg("Cannot open rc file \"%s\" -- %s.\n", 
-                   pathIter->c_str(), strError(errno).c_str());
-      }
-      else
-      {
-         parse_rcfile(rcfile, cmdArgs);
-         fclose(rcfile);
-      }
-   }
-
-   return true;
-}
-
-
-//////////////////////////  parse_options()  /////////////////////////////////
-bool parse_options(int argc, const char **argv, string& cmdArgs)
-{
-   char *minBufferSizeArgStr = (char *)NULL;
-   char *maxBufferSizeArgStr = (char *)NULL;
-   char *offsetArgStr = (char *)NULL;
-   char *patternArgStr = (char *)NULL;
-   char *unitsArgStr = (char *)NULL;
-   char *logfilePathArgStr = (char *)NULL;
-   char *dummyArgStr = (char *)NULL;
-   int writeArg = 0;
-   int readArg = 0;
-   int readAfterWriteArg = 0;
-   int seedArg = 0;
-   int helpArg = 0;
-   int usageArg = 0;
-   int iterationsArg = -1;
-   int noStatisticsArg = 0;
-   int statisticsArg = 0;
-   int detailedStatisticsArg = 0;
-   int noProgressArg = 0;
-   int progressArg = 0;
-   int noTuiArg = 0;
-   int tuiArg = 0;
-   int syncArg = 0;
-   int directArg = 0;
-   int randomArg = 0;
-   int generateLoadArg = 0;
-   int useStdRcFilesArg = 1;
-
-   struct poptOption optionsTable[] =  {
-      {"max-buffer-size", 'B', POPT_ARG_STRING, &maxBufferSizeArgStr, 0, "Each read(2)/write(2) call uses a maximum buffer of size BUFFER_SIZE.", "BUFFER_SIZE"},
-      {"min-buffer-size", 'b', POPT_ARG_STRING, &minBufferSizeArgStr, 0, "Each read(2)/write(2) call uses a minimum buffer of size BUFFER_SIZE.", "BUFFER_SIZE"},
-      {"continue-after-error", 'c', POPT_ARG_NONE, &gContinueAfterError, 0, "Continue after data integrity errors.", NULL},
-#ifdef HAVE_DIRECT_IO
-      {"direct", 'd', POPT_ARG_NONE, &directArg, 0, "Use direct I/O. Should only be used on block device files. Not all operating systems support direct I/O", NULL},
-#endif
-      {"generate-load", 'g', POPT_ARG_NONE, &generateLoadArg, 0, "Equivalent to: -v -t -P -p random -i 0.",  NULL},
-      {"iterations", 'i', POPT_ARG_INT, &iterationsArg, 0, "Write/read data COUNT times. If count is 0, repeats forever.", "COUNT"},
-      {"logfile", 'l', POPT_ARG_STRING, &logfilePathArgStr, 0, "Send log messages to LOGFILE.", "LOGFILE"},
-      {"no-progress", 0, POPT_ARG_NONE, &noProgressArg, 0, "Don't show progress (default).", NULL},
-      {"no-rcfiles", 0, POPT_ARG_NONE, NULL, 0, "Don't use standard rcfiles.", NULL},
-      {"no-statistics", 'q', POPT_ARG_NONE, &noStatisticsArg, 0, "Don't output statistics.", NULL},
-      {"no-tui", 0, POPT_ARG_NONE, &noTuiArg, 0, "Don't use TUI interface.", NULL},
-      {"offset", 'o', POPT_ARG_STRING, &offsetArgStr, 0, "Seek to OFFSET before starting I/O.", "OFFSET"},
-      {"progress", 'P', POPT_ARG_NONE, &progressArg, 0, "Show progress.", NULL},
-      {"pattern", 'p', POPT_ARG_STRING, &patternArgStr, 0, "Use data pattern PATTERN when reading or writing data.", "PATTERN"},
-      {"random", 'r', POPT_ARG_NONE, &randomArg, 0, "Read/Write buffers to random offsets.", NULL},
-      {"raw", 0, POPT_ARG_NONE, &readAfterWriteArg, 0, "An alias for --read-after-write.", NULL},
-      {"rcfile", 0, POPT_ARG_STRING, &dummyArgStr, 0, "Read command-line options from RCFILE.", "RCFILE"},
-      {"read", 0, POPT_ARG_NONE, &readArg, 0, "Read date from FILE.", NULL},
-      {"read-after-write", 0, POPT_ARG_NONE, &readAfterWriteArg, 0, "Read back data after writing to FILE.", NULL},
-      {"seed", 'S', POPT_ARG_INT, &seedArg, 0, "Use SEED for random number seed.","SEED"},
-      {"sync", 's', POPT_ARG_NONE, &syncArg, 0, "Use synchronous I/O.", NULL},
-      {"statistics", 0, POPT_ARG_NONE, &statisticsArg, 0, "Output statistics (default).", NULL},
-      {"tui", 't', POPT_ARG_NONE, &tuiArg, 0, "Use curses-based, terminal user interface.", NULL},
-      {"units", 'u', POPT_ARG_STRING, &unitsArgStr, 0, "Show transfer rate in UNITS units.", "UNITS"},
-      {"usage", 0, POPT_ARG_NONE, &usageArg, 0, "Show brief usage message and exit.", NULL},
-      {"version", 'V', POPT_ARG_NONE, &gGetVersion, 0, "Output version information and exit.", NULL},
-      {"detailed-statistics", 'v', POPT_ARG_NONE, &detailedStatisticsArg, 0, "Output detailed statistics.", NULL},
-      {"write", 0, POPT_ARG_NONE, &writeArg, 0, "Write data to FILE.", NULL},
-      {"help", '?', POPT_ARG_NONE, &helpArg, 0, "Show this help and exit.", NULL},
-      POPT_TABLEEND
-   };
-
-   cmdArgs = "";
-   if (!read_rcfiles(argc, argv, cmdArgs))
-       return false;
-   for (int i = 1; i < argc; i++)
-   {
-      cmdArgs += argv[i];
-      cmdArgs += " ";
-   }
-   cmdArgs = " " + cmdArgs;
-   cmdArgs = argv[0] + cmdArgs;
-   int newArgc;
-   const char **newArgv;
-   poptParseArgvString((char *)cmdArgs.c_str(), &newArgc, &newArgv);
-   poptContext context = poptGetContext(gPrgName,
-                                        newArgc, 
-                                        newArgv, 
-                                        optionsTable, 
-                                        POPT_CONTEXT_POSIXMEHARDER);
-
-   int rc = poptGetNextOpt(context);
-   if (rc < -1)
-   {
-      switch (rc)
-      {
-      case POPT_ERROR_BADOPT:
-         error_msg("bad or unknown option \"%s\"\n.", 
-                   poptBadOption(context, 0));
-         break;
-      default:
-         error_msg("%s.\n", poptStrerror(rc));
-         break;
-      }
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Help.
-   if (helpArg)
-   {
-      help(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Usage.
-   if (usageArg)
-   {
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   // Version.
-   if (gGetVersion)
-   {
-      poptFreeContext(context);
-      return true;
-   }
-
-   // Operation.
-   if (writeArg + readArg + readAfterWriteArg > 1)
-   {
-      error_msg("Only one operation (--write|--read|--read-after-write) allowed.\n");
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-   if (writeArg)
-      gOperation = OPERATION_WRITE;
-   else if (readArg)
-      gOperation = OPERATION_READ;
-   else if (readAfterWriteArg)
-      gOperation = OPERATION_READ_AFTER_WRITE;
-
-   // Min Buffer size.
-   if (minBufferSizeArgStr)
-   {
-      gMinBufferSize = get_size(minBufferSizeArgStr);
-   }
-   // Max Buffer size.
-   if (maxBufferSizeArgStr)
-   {
-      gMaxBufferSize = get_size(maxBufferSizeArgStr);
-   }
-   else
-   {
-      gMaxBufferSize = gMinBufferSize;
-   }
-
-   // Offset.
-   if (offsetArgStr)
-   {
-      gOffset = get_size(offsetArgStr);
-   }
-
-   // Pattern.
-   if (patternArgStr)
-   {
-      bool found = false;
-      for (int pattern = (int)Job::PATTERN_NONE;
-           PATTERN_LOOKUP[pattern] != (char *)NULL;
-           pattern++)
-      {
-         if (strcmp(patternArgStr, PATTERN_LOOKUP[pattern]) == 0)
-         {
-            gPattern = (Job::pattern_t)pattern;
-            found = true;
-            break;
-         }
-      }
-      if (!found) // Check for user pattern.
-      {
-         long int userPattern;
-         char *endPtr;
-         errno = 0;
-         userPattern = strtol(patternArgStr, &endPtr, 0);
-         if (errno == 0 && 
-             *endPtr == '\0' && 
-             userPattern >= 0 && 
-             userPattern <= 255)
-         {
-            found = true;
-            gPattern = Job::PATTERN_USER_DEFINED;
-            gUserPattern = (unsigned char)userPattern;
-         }
-      }
-      if (!found)
-      {
-         error_msg("\"%s\" is not a valid pattern. Use none, zeros, ones, alt, numbers, random or # (where # is any number between 0-255).\n", patternArgStr);
-         usage(context);
-         poptFreeContext(context);
-         return false;
-      }
-   }  
-
-   // Units.
-   if (unitsArgStr)
-   {
-      gUnits = get_units(unitsArgStr);
-   }
-
-   // Logfile.
-   if (logfilePathArgStr)
-   {
-      gLogfilePath = logfilePathArgStr;
-   }
-   
-   // Verbosity.
-   if (noStatisticsArg)
-      gVerbosity = VERBOSITY_NONE;
-   if (statisticsArg)
-      gVerbosity = VERBOSITY_SHORT;
-   if (detailedStatisticsArg)
-      gVerbosity = VERBOSITY_LONG;
-   
-   // Sync, direct I/O, and random seek.
-   if (syncArg)
-      gIOMethod = Job::SYNCH_IO;
-   if (directArg)
-      gIOMethod = Job::DIRECT_IO;
-   if (randomArg)
-      gFillMethod = TransferInfoList::RANDOM_FILL;
-
-   // Progress.
-   if (noProgressArg)
-      gProgress = false;
-   if (progressArg)
-      gProgress = true;
-
-   // Iterations.
-   if (iterationsArg >= 0)
-      gIterationsToDo = iterationsArg;
-
-   // Seed.
-   if (seedArg >= 0)
-      gSeed = (u32_t)seedArg;
-
-   // TUI.
-   if (noTuiArg)
-      gUseTui = false;
-   if (tuiArg)
-      gUseTui = true;
-
-   // Generate load -v -t -P -p random -i 0, above options will override 
-   // these.
-   if (generateLoadArg)
-   {
-      if (!noProgressArg)
-         gProgress = true;
-      if (!noStatisticsArg && !statisticsArg)
-         gVerbosity = VERBOSITY_LONG;
-      if (!noTuiArg)
-         gUseTui = true;
-      if (!patternArgStr)
-         gPattern = Job::PATTERN_RANDOM;
-      if (iterationsArg < 0)
-         gIterationsToDo = 0;
-   }
-   if (gIterationsToDo < 0)
-      gIterationsToDo = DEFAULT_ITERATIONS;
-
-   // Count the rest of the arguments.
-   const char **argsLeft = poptGetArgs(context);
-   int argsCount = 0;
-   if (argsLeft)
-   {
-      while (argsLeft[argsCount] != NULL)
-         argsCount++;
-   }
-   if (argsCount < 2)
-   {
-      error_msg("Need TRANSFER_SIZE and FILE.\n");
-      usage(context);
-      poptFreeContext(context);
-      return false;
-   }
-
-   gTransferSize = get_size(poptGetArg(context));
-   gFile = poptGetArg(context);
-
-   if (gSeed == DEFAULT_SEED)
-   {
-      gSeed = Random().getRandom32();
-      gJobId = 0;
-   }
-   else
-   {
-      gJobId = gSeed;
-   }
-
-   poptFreeContext(context);
-   return true;
-}
-
-
-/////////////////////////  validate_options()  ////////////////////////////////
-bool validate_options()
-{
-   if (gGetVersion)
-      return true;
-
-   if (gOperation == OPERATION_NONE)
-   {
-      error_msg("Must specify an operation (--write|--read|--read-after-write).\n");
-      return false;
-   }
-
-   if (gMinBufferSize > gMaxBufferSize)
-   {
-      error_msg("Minimum buffer size must be <= maximum buffer size.\n");
-      return false;
-   }
-   if (gMaxBufferSize % gMinBufferSize != 0)
-   {
-      error_msg("Maximum buffer size must be an even multiple of minimum buffer size.\n");
-      return false;
-   }
-   if (gMinBufferSize % Transfer::BUFFER_SIZE_INCREMENT != 0)
-   {
-      error_msg("Minimum buffer size must be an even multiple of %llu bytes.\n",  Transfer::BUFFER_SIZE_INCREMENT);
-      return false;
-   }
-   if (gMaxBufferSize % Transfer::BUFFER_SIZE_INCREMENT != 0)
-   {
-      error_msg("Maximum buffer size must be an even multiple of %llu bytes.\n", Transfer::BUFFER_SIZE_INCREMENT);
-      return false;
-   }
-   if (gTransferSize < gMinBufferSize)
-   {
-      error_msg("TRANSFER_SIZE must be >= MIN_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize < gMaxBufferSize)
-   {
-      error_msg("TRANSFER_SIZE must be >= MAX_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize % gMinBufferSize != 0)
-   {
-      error_msg("TRANSFER_SIZE must be an even multiple of MIN_BUFFER_SIZE.\n");
-      return false;
-   }
-   if (gTransferSize % gMaxBufferSize != 0)
-   {
-      error_msg("TRANSFER_SIZE must be an even multiple of MAX_BUFFER_SIZE.\n");
-      return false;
-   }
-
-
-#ifdef HAVE_DIRECT_IO
-   if (gIOMethod == Job::DIRECT_IO)
-   {
-      if (gMinBufferSize % Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT != 0)
-      {
-         error_msg("MIN_BUFFER_SIZE must be a multiple of %llu bytes when using direct I/O. Use -b|--min-buffer-size to set MIN_BUFFER_SIZE.\n", Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT);
-         return false;
-      }
-      if (gMaxBufferSize % Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT != 0)
-      {
-         error_msg("MAX_BUFFER_SIZE must be a multiple of %llu bytes when using direct I/O. Use -B|--max-buffer-size to set MAX_BUFFER_SIZE.\n", Transfer::DIRECTIO_BUFFER_SIZE_INCREMENT);
-         return false;
-      }
-   }
-#endif
-
-#ifdef HAVE_MOUNT_CHECK
-   if (is_mounted(gFile.c_str()))
-   {
-      error_msg("Cannot use a mounted device for FILE.\n");
-      return false;
-   }
-#endif // HAVE_MOUNT_CHECK
-
-   return true;
-}
-
-
-//////////////////////////  end_program()  ////////////////////////////////////
-void end_program(int exitCode)
-{
-   end_program(exitCode, "");
-}
-
-
-//////////////////////////  end_program()  ////////////////////////////////////
-void end_program(int exitCode, const char *fmt, ...)
-{
-   char msg[MAX_TMP_STR_LEN];
-
-   if (gDisplay)
-      gDisplay->close();
-   
-   va_list ap;
-   va_start(ap, fmt);
-   vsnprintf(msg, MAX_TMP_STR_LEN, fmt, ap);
-   va_end(ap);
-
-   if (strlen(msg) > 0)
-   {
-      if (gLogger)
-         gLogger->logError(msg);
-      error_msg(msg);
-   }
-
-   if (gLogger)
-   {
-      if (exitCode == EXIT_OK)
-         run_statistics(gCurrentIteration);
-      if (gFoundTransferErrors > 0)
-      {
-         if (gLogfilePath.length() > 0)
-         {
-            gLogger->showError("One or more data integrity or I/O errors were encountered during data\ntransfers.  Descriptions of these errors can be found in the logfile\n%s.\n", gLogfilePath.c_str());
-         }
-         else
-         {
-            gLogger->showError("One or more data integrity or I/O errors were encountered during data\ntransfers.  Descriptions of these types of errors are output to a log file if\nthe -l|--logfile option is used.\n");
-         }
-      }
-      gLogger->logFinish();
-      gLogger->close();
-   }
-
-   exit(exitCode);
-}
-
-
-//////////////////////////  cleanup()  ///////////////////////////////////////
-void cleanup(int signal)
-{
-   if (signal == SIGQUIT || signal == SIGINT)
-      end_program(EXIT_OK);
-   else
-      end_program(EXIT_ERROR_CAUGHT_EXCEPTION, 
-                  "Caught signal \"%s\", exiting.\n", strSignal(signal).c_str());
-}
-
-
-//////////////////////////  resize()  /////////////////////////////////////////
-void resize(int sig)
-{
-   static int working = 0;  // Latch for repeated interrupts.
-
-   if (!working++)
-   {
-      if (gDisplay)
-         gDisplay->resize();
-   }
-   working--;
-}
-
-
-//////////////////////////  update_job_times()  //////////////////////////////
-void update_transfer_totals(const Job *job,
-                            IoDirection_t ioDirection)
-{
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalBytesRead += job->getBytesTransferred();
-      gTotalReadTransferTime += job->getTransferEndTime() - job->getTransferStartTime(); 
-      break;
-   case WRITING:
-      gTotalBytesWritten += job->getBytesTransferred();
-      gTotalWriteTransferTime += job->getTransferEndTime() - job->getTransferStartTime(); 
-      break;
-   }
-}
-
-
-//////////////////////////  intermediate_statistics() /////////////////////////
-void intermediate_statistics(const Job *job, 
-                             IoDirection_t ioDirection)
-{
-   TimeHack currentTime(TimeHack::getCurrentTime());
-
-   gDisplay->intermediateStatistics(job->getHackBytesTransferred(),
-                                    job->getHackEndTime() - job->getHackStartTime(),
-                                    job->getJobBytesTransferred(),
-                                    currentTime - job->getJobStartTime(),
-                                    job->getTransferSize(),
-                                    gTotalBytesRead,
-                                    gTotalReadTransferTime.getTime(),
-                                    gTotalBytesWritten,
-                                    gTotalWriteTransferTime.getTime(), 
-                                    currentTime - gProgramStartTime);
-}
-
-
-//////////////////////////  cumulative_statistics()  //////////////////////////
-void cumulative_statistics(const Job *job, 
-                           unsigned int iteration,
-                           IoDirection_t ioDirection)
-{
-   TimeHack now(TimeHack::getCurrentTime());
-   TimeHack jobTransferTime(job->getJobEndTime() - job->getJobStartTime());
-
-
-   gDisplay->cumulativeStatistics(job->getJobBytesTransferred(), 
-                                  jobTransferTime.getTime(),
-                                  job->getTotalNumberOfTransfers(),
-                                  gTotalBytesRead,
-                                  gTotalReadTransferTime.getTime(),
-                                  gTotalReadOps,
-                                  gTotalBytesWritten,
-                                  gTotalWriteTransferTime.getTime(), 
-                                  gTotalWriteOps,
-                                  now - gProgramStartTime);
-
-   long double transferRate = convertCapacity((long double)job->getJobBytesTransferred(), gUnits)/jobTransferTime.getTime();
-   long double iops = (long double)job->getTotalNumberOfTransfers()/(long double)jobTransferTime.getTime();
-
-   switch (ioDirection)
-   {
-   case READING:
-      gLogger->logNote("Iter: %5d   RTR: %11.2Lf %-5s   TT: %s   IOPS: %11.2Lf\n",
-                       iteration,
-                       transferRate, 
-                       getTransferRateUnitsStr(gUnits), 
-                       jobTransferTime.getElapsedTimeStr().c_str(),
-                       iops);
-      break;
-   case WRITING:
-      gLogger->logNote("Iter: %5d   WTR: %11.2Lf %-5s   TT: %s   IOPS: %11.2Lf\n",
-                       iteration,
-                       transferRate, 
-                       getTransferRateUnitsStr(gUnits), 
-                       jobTransferTime.getElapsedTimeStr().c_str(),
-                       iops);
-      break;
-   }  
-}
-
-
-//////////////////////////  run_statistics()  ////////////////////////////////
-void run_statistics(unsigned int iterations)
-{
-   unsigned int device;
-   device = Log::OUTPUT_LOG_STDOUT;
-   if (gVerbosity == VERBOSITY_LONG)
-      device |= Log::OUTPUT_DISPLAY_STDOUT;
-
-   TimeHack now(TimeHack::getCurrentTime());
-
-   if (!gUseTui)
-      gLogger->note(device, "\n");
-   gLogger->note(device, "Total iterations:                %17u\n",
-                 iterations);
-   gLogger->note(device, "Total runtime:                   %17s\n",
-                 gProgramStartTime.getTimeDiffStr(now).c_str());
-
-   if (gTotalBytesWritten > 0)
-   {
-      long double writeTransferRate = convertCapacity((long double)gTotalBytesWritten, gUnits)/(long double)gTotalWriteTransferTime.getTime();
-      long double writeIops = (long double)gTotalWriteOps/(long double)gTotalWriteTransferTime.getTime();
-      gLogger->note(device, "Total write transfer time (WTT): %17s\n", 
-                    gTotalWriteTransferTime.getElapsedTimeStr().c_str());
-      gLogger->note(device, "Total write transfer rate (WTR): %11.2Lf %-5s\n",
-                    writeTransferRate, getTransferRateUnitsStr(gUnits));
-      gLogger->note(device, "Total write IOPS:                %11.2Lf IOPS\n", writeIops);
-                    
-   }
-   if (gTotalBytesRead > 0)
-      
-   {
-      long double readTransferRate = convertCapacity((long double)gTotalBytesRead, gUnits)/(long double)gTotalReadTransferTime.getTime();
-      long double readIops = (long double)gTotalReadOps/(long double)gTotalReadTransferTime.getTime();
-      gLogger->note(device, "Total read transfer time (RTT):  %17s\n", 
-                    gTotalReadTransferTime.getElapsedTimeStr().c_str());
-      gLogger->note(device, "Total read transfer rate (RTR):  %11.2Lf %-5s\n",
-                    readTransferRate, getTransferRateUnitsStr(gUnits));
-      gLogger->note(device, "Total read IOPS:                 %11.2Lf IOPS\n", readIops);
-   }
-}
-
-
-//////////////////////////  do_job()  /////////////////////////////////////////
-void do_job(Job *job, unsigned int iteration, IoDirection_t ioDirection)
-{
-   int ret;
-   capacity_t startingVerticalHacks = gDisplay->getCurrentNumVerticalHacks();
-   capacity_t startingHorizontalHacks = gDisplay->getCurrentNumHorizontalHacks();
-   capacity_t totalTransfers = job->getTotalNumberOfTransfers();
-   capacity_t transferSize = job->getTransferSize();
-   TimeHack savedTotalWriteTransferTime(gTotalWriteTransferTime);
-   TimeHack savedTotalReadTransferTime(gTotalReadTransferTime);
-
-   if (gProgress || gUseTui)
-   {
-      capacity_t transfersPerVerticalHack = (capacity_t)((double)totalTransfers/(double)startingVerticalHacks);
-      capacity_t verticalHacks = startingVerticalHacks;
-      if (transfersPerVerticalHack < 1LLU)
-      {
-         transfersPerVerticalHack = 1LLU;
-         verticalHacks = totalTransfers;
-      }
-
-      capacity_t transfersPerHorizontalHack = (capacity_t)((double)transfersPerVerticalHack/(double)startingHorizontalHacks);
-      capacity_t horizontalHacks = startingHorizontalHacks;
-      if (transfersPerHorizontalHack <= 1LLU)
-      {
-         transfersPerHorizontalHack = 1LLU;
-         if (transfersPerVerticalHack > startingHorizontalHacks)
-            horizontalHacks = startingHorizontalHacks;
-         else
-            horizontalHacks = transfersPerVerticalHack;
-      }
-         
-      capacity_t bufferSize = job->getBufferSize();
-      capacity_t remainingTransfers;
-
-      gDisplay->startJob(iteration, ioDirection);
-      ret = job->startJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-      }
-      for (capacity_t i = 1LLU; i <= verticalHacks - 1; i++)
-      {
-         // Run transfers for horizontal hacks.
-         job->startHack();
-         for (capacity_t j = 1LLU; j <= horizontalHacks - 1; j++)
-         {
-            ret = job->runTransfers(transfersPerHorizontalHack,
-                                    gContinueAfterError);
-            update_transfer_totals(job, ioDirection);
-            if (ret != EXIT_OK)
-            {
-               gFoundTransferErrors++;
-               gDisplay->errorHack();
-               if (gContinueAfterError)
-               {
-                  gLogger->logError("%s\n", 
-                                    job->getLastErrorMessage().c_str());
-               }
-               else
-               {
-                  end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-               }
-            }
-            else
-            {
-               gDisplay->hack();
-            }
-         }
-            
-         // Finish remaining transfers for last horizontal hack.
-         remainingTransfers = transfersPerVerticalHack - (transfersPerHorizontalHack * (horizontalHacks - 1));
-         ret = job->runTransfers(remainingTransfers, gContinueAfterError);
-         update_transfer_totals(job, ioDirection);
-         if (ret != EXIT_OK)
-         {
-            gFoundTransferErrors++;
-            gDisplay->errorEndHack();
-            if (gContinueAfterError)
-            {
-               gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-            }
-            else
-            {
-               gDisplay->nextHackRow();
-               end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-            }
-         }
-         else
-         {
-            gDisplay->endHack();
-         }
-         job->endHack();
-         for (capacity_t j = 0;
-              j < startingHorizontalHacks - horizontalHacks;
-              j++)
-         {
-            gDisplay->noHack();
-         }
-         intermediate_statistics(job, ioDirection);
-         gDisplay->nextHackRow();
-      }
-
-      // Finish transfers for last vertical hack leftovers.
-      remainingTransfers = (transferSize - job->getJobBytesTransferred())/bufferSize;
-      if (remainingTransfers > 0LLU)
-      {
-         job->startHack();
-         transfersPerHorizontalHack = (capacity_t)((double)remainingTransfers/(double)startingHorizontalHacks);
-         if (transfersPerHorizontalHack <= 1)
-         {
-            transfersPerHorizontalHack = 1LLU;
-            if (remainingTransfers > startingHorizontalHacks)
-               horizontalHacks = startingHorizontalHacks;
-            else
-               horizontalHacks = remainingTransfers;
-         }
-         for (capacity_t j = 1LLU; j <= horizontalHacks - 1; j++)
-         {
-            ret = job->runTransfers(transfersPerHorizontalHack,
-                                    gContinueAfterError);
-            update_transfer_totals(job, ioDirection);
-            if (ret != EXIT_OK)
-            {
-               gFoundTransferErrors++;
-               gDisplay->errorHack();
-               if (gContinueAfterError)
-               {
-                  gLogger->logError("%s\n", 
-                                    job->getLastErrorMessage().c_str());
-               }
-               else
-               {
-                  gDisplay->nextHackRow();
-                  end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-               }
-            }
-            else
-            {
-               gDisplay->hack();
-            }
-         }
-         ret = job->runTransfers(remainingTransfers - (transfersPerHorizontalHack * (horizontalHacks - 1)), gContinueAfterError);
-         update_transfer_totals(job, ioDirection);
-         if (ret != EXIT_OK)
-         {
-            gFoundTransferErrors++;
-            gDisplay->errorEndHack();
-            if (gContinueAfterError)
-            {
-               gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-            }
-            else
-            {
-               gDisplay->nextHackRow();
-               end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-            }
-         }
-         else
-         {
-            gDisplay->endHack();
-         }
-         job->endHack();
-         for (capacity_t j = 0; 
-              j < startingHorizontalHacks - horizontalHacks;
-              j++)
-         {
-            gDisplay->noHack();
-         }
-         intermediate_statistics(job, ioDirection);
-         gDisplay->nextHackRow();
-      }
-      ret = job->finishJob();
-      if (ret != EXIT_OK)
-      {
-         gLogger->showError("%s\n", job->getLastErrorMessage().c_str());
-         exit(ret);
-      }
-   }
-   else
-   {
-      gDisplay->startJob(iteration, ioDirection);
-      ret = job->startJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-         exit(ret);
-      }
-      ret = job->runTransfers(totalTransfers, gContinueAfterError);
-      update_transfer_totals(job, ioDirection);
-      if (ret != EXIT_OK)
-      {
-         gFoundTransferErrors++;
-         if (gContinueAfterError)
-         {
-            gLogger->logError("%s\n", job->getLastErrorMessage().c_str());
-         }
-         else
-         {
-            end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-         }
-      }
-      ret = job->finishJob();
-      if (ret != EXIT_OK)
-      {
-         end_program(ret, "%s\n", job->getLastErrorMessage().c_str());
-      }
-   }
-   // May get incremental time errors during transfers, so reset transfer 
-   // totals to old value plus total job time.
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalReadTransferTime = savedTotalReadTransferTime + job->getJobEndTime() - job->getJobStartTime();
-      break;
-   case WRITING:
-      gTotalWriteTransferTime = savedTotalWriteTransferTime + job->getJobEndTime() - job->getJobStartTime();
-      break;
-   }
-
-   // Update IOPS.
-   switch (ioDirection)
-   {
-   case READING:
-      gTotalReadOps += job->getTotalNumberOfTransfers(); 
-      break;
-   case WRITING:
-      gTotalWriteOps += job->getTotalNumberOfTransfers(); 
-      break;
-   }
-
-   cumulative_statistics(job, iteration, ioDirection);
-   gDisplay->endJob();
-}
-
-
-//////////////////////////  run()  ////////////////////////////////////////////
-void run(operation_enum operation)
-{
-   int ret;
-
-   gCurrentIteration = 0;
-   do
-   {
-      gCurrentIteration++;
-      if (operation == OPERATION_WRITE || 
-          operation == OPERATION_READ_AFTER_WRITE)
-      {
-         Job *job = new WriteJob(*gLogger,
-                                 gFile,
-                                 gOffset,
-                                 gTransferSize,
-                                 gMinBufferSize,
-                                 gMaxBufferSize,
-                                 TransferInfoList::GEOMETRIC_PROGRESSION,
-                                 gPattern,
-                                 gUserPattern,
-                                 gFillMethod,
-                                 gIOMethod,
-                                 gSeed,
-                                 gJobId);
-         if (job == (Job *)NULL)
-         {
-            gLogger->showError("Could not allocate memory.");
-            exit(EXIT_ERROR_MEMORY_ALLOC);
-         }
-         if ((ret = job->init()) != EXIT_OK)
-         {
-            gLogger->showError("Could not initialize job.\n");
-            exit(ret);
-         }
-         
-         do_job(job, gCurrentIteration, WRITING);
-         delete job;
-         
-         if (gIterationsToDo == 0 || 
-             gCurrentIteration < gIterationsToDo ||
-             gCurrentIteration == gIterationsToDo && 
-             operation == OPERATION_READ_AFTER_WRITE)
-         {
-            gDisplay->nextJob();
-         }
-      }
-
-      if (operation == OPERATION_READ || 
-          operation == OPERATION_READ_AFTER_WRITE)
-      {
-         Job *job = new ReadJob(*gLogger,
-                                gFile,
-                                gOffset,
-                                gTransferSize,
-                                gMinBufferSize,
-                                gMaxBufferSize,
-                                TransferInfoList::GEOMETRIC_PROGRESSION,
-                                gPattern,
-                                gUserPattern,
-                                gFillMethod,
-                                gIOMethod,
-                                gSeed,
-                                gJobId);
-         if (job == (Job *)NULL)
-         {
-            gLogger->showError("Could not allocate memory.");
-            exit(EXIT_ERROR_MEMORY_ALLOC);
-         }
-         if ((ret = job->init()) != EXIT_OK)
-         {
-            gLogger->showError("Could not initialize job.\n");
-            exit(ret);
-         }
-
-         do_job(job, gCurrentIteration, READING);
-         delete job;
-
-         if (gIterationsToDo == 0 || gCurrentIteration < gIterationsToDo)
-         {
-            gDisplay->nextJob();
-         }
-      }
-
-   } while (gIterationsToDo == 0LLU || gCurrentIteration < gIterationsToDo);
-}
-
-
-//////////////////////////  main()  ///////////////////////////////////////////
-int main(int argc, char *argv[])
-{
-   int rtn;
-
-   // Process command-line options.
-   gPrgName = argv[0];
-   const char *prgBasename = basename(gPrgName);
-   string cmdArgs;
-   
-   for (int i = 1; PROG_NAME_LOOKUP[i] != (char *)NULL; i++)
-   {
-      if (strcmp(prgBasename, PROG_NAME_LOOKUP[i]) == 0)
-      {
-         gOperation = (operation_enum)i;
-         break;
-      }
-   }
-
-   if (!parse_options(argc, (const char **)argv, cmdArgs))
-   {
-      exit(EXIT_ERROR_USAGE);
-   }
-   if (!validate_options())
-      exit(EXIT_ERROR_USAGE);
-
-   if (gGetVersion)
-   {
-      version();
-      exit(0);
-   }
-
-   gLogger = new Log(gLogfilePath);
-   if (gLogger == (Log *)NULL)
-   {
-      end_program(EXIT_ERROR_MEMORY_ALLOC, "Out of memory.\n");
-   }
-   if ((rtn = gLogger->open()) != EXIT_OK)
-   {
-      end_program(rtn, "Could not open logfile \"%s\" -- %s\n",
-                  gLogfilePath.c_str(), strError(rtn).c_str());
-   }
-
-   signal(SIGQUIT, cleanup);
-   signal(SIGTERM, cleanup);
-   signal(SIGINT, cleanup);
-   signal(SIGWINCH, resize);
-
-   if (gUseTui)
-      gDisplay = new SpewTui(gIterationsToDo, gUnits, gProgress, gVerbosity);
-   else
-      gDisplay = new SpewConsole(gIterationsToDo, gUnits, gProgress, gVerbosity);
-
-   if (gDisplay == (SpewDisplay *)NULL)
-      end_program(EXIT_ERROR_MEMORY_ALLOC, "Out of memory.\n");
-   if ((rtn = gDisplay->init()) != EXIT_OK)
-      end_program(rtn, "Could not initialize display.\n");
-
-   gDisplay->setCurrentUnits(gUnits);
-   gProgramStartTime = TimeHack::getCurrentTime();
-   gLogger->logStart();
-   gLogger->logCmdLine(cmdArgs.c_str());
-   gLogger->logNote("\n");
-   gDisplay->startRun();
-
-   try 
-   {
-      run(gOperation);
-   } catch(...)
-   {
-      gLogger->showError("Caught exception\n");
-      exit(EXIT_ERROR_CAUGHT_EXCEPTION);
-   }
-   gDisplay->endRun();
-   end_program(EXIT_OK);
-
-   return 0;
-}
-
-
-

Copied: tags/1.0.8/src/spew.cpp (from rev 86, trunk/src/spew.cpp)



